(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    547979,      11086]
NotebookOptionsPosition[    543223,      10996]
NotebookOutlinePosition[    543566,      11011]
CellTagsIndexPosition[    543523,      11008]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"summary", "=", 
   RowBox[{"SemanticImport", "[", 
    RowBox[{"FileNameJoin", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<list3.2.xls\>\""}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.73195289174195*^9, 3.731952929475078*^9}, 
   3.7319654928038545`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"010c784a-a775-4539-b973-d0c600cfa6bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"summary", "=", 
  RowBox[{
   RowBox[{"summary", "[", 
    RowBox[{"All", ",", 
     RowBox[{";;", "8"}]}], "]"}], "//", "Dataset"}]}]], "Input",
 CellChangeTimes->{{3.731953057734571*^9, 3.731953105350404*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"502e9ace-b246-4b1d-86bc-26dfd24a2f42"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 2635, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "case", "scan", "roi", "volume", "eq. diam.", "x loc.", "y loc.", 
            "slice no."}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 2635], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "case"} -> 1, {All, "scan"} -> 1, {All, "roi"} -> 
           1, {All, "volume"} -> 1, {All, "eq. diam."} -> 1, {All, "x loc."} -> 
           1, {All, "y loc."} -> 1, {All, "slice no."} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "case" -> TypeSystem`PackageScope`AtomShape[34], "scan" -> 
              TypeSystem`PackageScope`AtomShape[60], "roi" -> 
              TypeSystem`PackageScope`AtomShape[60], "volume" -> 
              TypeSystem`PackageScope`AtomShape[60], "eq. diam." -> 
              TypeSystem`PackageScope`AtomShape[60], "x loc." -> 
              TypeSystem`PackageScope`AtomShape[60], "y loc." -> 
              TypeSystem`PackageScope`AtomShape[60], "slice no." -> 
              TypeSystem`PackageScope`AtomShape[60]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[470262540], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "case", "scan", "roi", "volume", "eq. diam.", "x loc.", "y loc.", 
            "slice no."}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 2635], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[470262540]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"case\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"case\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859][{
                    All, "case"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[All, "case"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"scan\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"scan\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859][{
                    All, "scan"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[All, "scan"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"roi\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"roi\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859][{
                    All, "roi"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[All, "roi"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"volume\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"volume\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859][{
                    All, "volume"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[All, "volume"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"eq. diam.\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"eq. diam.\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859][{
                    All, "eq. diam."}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[All, "eq. diam."]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"x loc.\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"x loc.\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859][{
                    All, "x loc."}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[All, "x loc."]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"y loc.\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"y loc.\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859][{
                    All, "y loc."}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[All, "y loc."]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"slice no.\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"slice no.\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859][{
                    All, "slice no."}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[All, "slice no."]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[1, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000566."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[1, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[1, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6459.75"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[1, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["23.107"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[1, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["317."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[1, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["367."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[1, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["43."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[1, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[2, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000522."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[2, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[2, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6663.44"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[2, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["23.347"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[2, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["345."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[2, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["361."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[2, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["77."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[2, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[3, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000611."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[3, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[3, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["408.79"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[3, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9.208"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[3, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["308."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[3, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["198."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[3, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["57."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[3, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[4, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000611."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[4, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[4, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1165.82"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[4, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13.058"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[4, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["221."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[4, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["219."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[4, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["56."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[4, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[5, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000611."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[5, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[5, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4989.64"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[5, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["21.201"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[5, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["367."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[5, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["350."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[5, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["65."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[5, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[6, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000611."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[6, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[6, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4276.35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[6, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20.138"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[6, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["369."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[6, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["347."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[6, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["74."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[6, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[7, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000534."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[7, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[7, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["58.32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[7, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.811"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[7, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["142."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[7, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["323."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[7, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["165."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[7, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[8, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000548."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[8, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[8, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["115.76"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[8, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.047"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[8, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["313."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[8, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["407."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[8, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["53."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[8, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[9, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000548."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[9, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[9, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["76.07"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[9, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.257"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[9, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["127."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[9, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["398."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[9, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["56."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[9, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[10, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000548."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[10, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[10, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["69.45"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[10, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[10, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["407."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[10, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["377."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[10, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["45."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[10, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[11, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000556."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[11, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[11, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["379.88"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[11, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.986"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[11, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["363."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[11, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["354."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[11, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["63."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[11, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[12, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000556."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[12, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[12, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["90.82"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[12, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.577"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[12, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["191."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[12, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["340."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[12, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["79."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[12, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[13, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000556."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[13, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[13, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["48.34"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[13, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.52"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[13, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["392."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[13, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["333."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[13, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["65."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[13, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[14, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000556."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[14, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[14, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["169.43"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[14, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.865"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[14, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["371."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[14, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["357."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[14, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["49."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[14, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[15, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000631."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[15, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[15, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1892.09"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[15, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.346"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[15, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["293."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[15, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["266."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[15, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[15, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[16, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000631."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[16, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[16, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6853.49"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[16, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["23.567"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[16, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["194."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[16, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["290."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[16, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["37."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[16, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[17, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000549."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[17, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[17, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["103.76"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[17, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[17, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["123."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[17, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["290."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[17, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["62."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[17, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[18, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000549."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[18, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[18, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["100.71"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[18, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.772"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[18, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["369."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[18, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["270."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[18, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["45."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[18, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[19, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000538."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[19, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[19, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["56.46"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[19, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.76"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[19, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["304."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[19, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["324."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[19, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["89."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[19, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[20, 
                   Key["case"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3000538."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[20, 
                   Key["scan"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[20, 
                   Key["roi"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["57.98"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[20, 
                   Key["volume"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.802"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[20, 
                   Key["eq. diam."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["202."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[20, 
                   Key["x loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["334."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[20, 
                   Key["y loc."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["153."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
                  GeneralUtilities`Slice[20, 
                   Key["slice no."]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    2635 (-20), {1, 2635 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 2635 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    2635, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 2635 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    2635 20, {1, 2635 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    2635 (-20), {1, 2635 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 2635 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    2635, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 2635 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    2635 20, {1, 2635 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 243260859]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[243260859][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {550., {279., 285.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7319530974432273`*^9, 3.731953106064768*^9}, 
   3.7319655050795164`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"20101a81-9a9f-45aa-9c7f-e91c8ed42916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"volume", "=", 
  RowBox[{"SmoothHistogram", "[", 
   RowBox[{
    RowBox[{"Log10", "/@", 
     RowBox[{"summary", "[", 
      RowBox[{"All", ",", "\"\<volume\>\""}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Log10 \!\(\*SuperscriptBox[\(mm\), \(3\)]\)\>\"", ",", 
       "\"\<Likelihood\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Volumes of Nodules\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.731953172979186*^9, 3.731953216149564*^9}, {
  3.7319532467974663`*^9, 3.731953246935003*^9}, {3.731965722346694*^9, 
  3.731965728245391*^9}, {3.731966511268759*^9, 3.731966546649884*^9}, {
  3.731966579610876*^9, 3.731966583554742*^9}, {3.7319666466064205`*^9, 
  3.731966715450362*^9}, {3.731967103310216*^9, 3.7319671043868055`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"5cc41dae-1736-4c99-b115-f16ed750f30f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"Log10 \\!\\(\\*SuperscriptBox[\\(mm\\), \\(3\\)]\\)\"", 
     TraditionalForm], 
    FormBox["\"Likelihood\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volumes of Nodules\"", TraditionalForm],
  PlotRange->{{0, 5.36813592967821}, {0, 0.8465046528048613}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7319531949849987`*^9, 3.7319532170202856`*^9}, 
   3.7319532479687686`*^9, {3.7319666834812202`*^9, 3.7319667163138213`*^9}, 
   3.731967104943362*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"3ed44510-edb3-4a1c-8571-d694a1374a1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<volumes.pdf\>\""}], 
     "}"}]}], ",", "volume"}], "]"}]], "Input",
 CellChangeTimes->{{3.7319671062922015`*^9, 3.7319671394837503`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"17c3c532-39d9-4837-9e83-e16b48ed9980"],

Cell[BoxData["\<\"C:\\\\Users\\\\lhe\\\\cs109b\\\\cs109b-projectofchampions\\\
\\data\\\\volumes.pdf\"\>"], "Output",
 CellChangeTimes->{3.731967148465354*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"f8fdaa48-18ca-4612-aa64-e266966bd9c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diameter", "=", 
  RowBox[{"SmoothHistogram", "[", 
   RowBox[{
    RowBox[{"Log10", "/@", 
     RowBox[{"summary", "[", 
      RowBox[{"All", ",", "\"\<eq. diam.\>\""}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Log10 mm\>\"", ",", "\"\<Likelihood\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Diameters of Nodules\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.731953271600457*^9, 3.7319533354349656`*^9}, {
  3.7319667264005957`*^9, 3.7319667579361515`*^9}, {3.7319671564041424`*^9, 
  3.731967157774023*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"24f30db4-ae20-4e5e-b03a-88aa738301a5"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd23k01N8fP3CMiHaVopBQKhWlqOQ5pZQloVCi7KWEJJGKUtn6CCGSkIgS
UmSNEkmSfd/33TDDMGP53e85v/P74zf/zHmde993Xvd13u97H/ec94ib2ela
cnFwcLhSODj+932pxrwwdEU5OP7v5/+Pm45KRqTtLAdfj7/0+SxjGKR0O1Zq
lOOtoqK131kTVInEao5Zl0N98nghu9cUp30tJZd6lWO55cknh4PN8WdaalY6
rhw5zyqXbzaxxAmr3qrjP8vx2TnJ4tzJyyioivtg1lmO29f8d93WsgaOXPZw
46jApzeylZw3ryE7aeuFV6IVWPmj58+x9OvYv7F/T6ZSBewVf95RWWqPVO94
/lrDCsh1a6XSNW9gF/NK54RzBTbpZanuiXDAe4ttWSteVCA+tCZ5bPYmtlQO
BMikVUC9rXTpEptbeIP31mpVFbhesVNHd9AJoh+vHrEar8C6uPQdbred8VJ4
h5DHikpIXXCRPbH6DgS9hmiROyuxWU1D80yuKwInPxTnaJD2uQ1L5W7dw3Jz
m6gG60p4HXM7cvOgG3zKZZynPCshmMVxWOeJO3iUR06vjqvEXlOV2JBbD/Dw
w8etsj8r8VzgRUHx1YeYX2+7oNlZiVqDzLl4Sw/cebKrzpqjCtt2OL9mWD7C
FH006YloFc6IbH9ufe0xHEyTn8QoVWFrU/WxsltPMFpmdzHfsAoFGz+fHnrk
iatKsvtbnKtg/VwpISDUC70JtGWskCq4PG3Pj0rxhtm6Tz2CaVXwcVn9ZrbU
B62PbuTuraqCx3FBSsiILwwn5IK1x6uQHxCY4CjwH2ovTdhcX1EN72v7rMMO
+UH3b+oxn53VuDhuK7XL+hnKDt7c+E6jGkNWcarJp/yhHr+XUWBdjRuXNSIV
BvxRtJbxp92zGlVdxZfOewbgqMeXmLnYagjPh5WqSwfiG83RVfhnNRJXGKkd
Lw3EwYv7zih0VsMnVPHqs5vPkf5ncvtZjho4lfGauogGYc+BdK4bojU4ZZ37
68LfICTFOTX+p1QDh5dJIUHuwdi+RiH1vWEN0hdOK/oohiDuAdP7l3MNttQF
BX2YDMHmsa+m3SE1CH//e/5yxgu8NnI+wJlWg50WTu8PPQiFcIniKtGqGhif
RMtL7TCEKMz0Hxyvgcyl3f/4t76EQGxmvsGKWshuCHnJtSgcfgJ3Qh131sJb
bZLNPRQOfveD9gEatbh4N4T3acMrPBlhnUiyrsWXzme+aysiwHUhW+yPZy0W
bP8ZC1a+xv1iV2ZfbC1W5b8c4miJBGuf0j/un7WodKl0l3SJglPMbJx4Zy04
InVfyvBFY2Jl7n1ljjo0/jp0v/R1NGzv39O/IFqHe5r1DnsOvsHg0OFdzkp1
cBL1L/6v6Q2szs8vCjasA0XBInSxRww6i761fHKugxbFfedf2be4KO+WVhZS
hwHthlzenrdojMZ/Q1/qIOWq6tscGQv9FRyWi6vqoGxWV3jbNA6Vd/OVpMbr
IGMo4bFo+ztoDbqvObqiHjuVvyalzrxDicGR4Ys767HDMy8+qTweqoWcP101
6nFS78m4bHICfuz5ER5qXY/DxhG1t4PfQznq4c00z3rMXLk08MvjA7KWqWhU
xtZDe9u/bfZ3ErHflSIxVlCPgBC9md8uH5HaX8Ba0lmPQOkXnAceJmGX/qNK
aY4GNPXaq8sFJeN9wbH3x0UbMJhqdV74XAq2yC16aKbUgL1B939eHUrBm9eF
590MG7DCT2KV0aNPEF36RO6VcwPs7idcOCmRipcuqnyZIQ0YKRhxeF6cCsE+
no6aLw1wpJyPi3f8jMCzvzImKhswuelJ3sLWL1j+w9N/xXgDomP+PF7f9QVe
u09ekVnRiMXhieb349LAHbGYqrazEW4VpeI/HdLhzv97nZVGI/YFxsU8OfkV
s7e9xx5aN8LZw/2FtXQGnHvUfkV6NuK7pY/YxtWZYOjyR+bENqJzT8cKHb4s
2OeXODUUNGIvTetVwZJsDO/01ZrqaES9ZEXC/g05uBKusWU1RxOSDdymbijm
onvx0vndok3QWPz6rrLFN5g4ldZoKjVht573gauReWjuevrR2rAJtaf/o5nf
ysc5nVOPnzg3QWdX0myAxHdUf1tmHBPSBNVFHmfiG79DW6ZMPv9LE0JeQ2FF
+A+UhvktbalsQkNL18ZdlgU4yXu6e4bWhC16IcNXDvzET8cVOYIrmuFv4di3
eX0hqJ3/nu/d2Yz96/k/ZHEWIee0/zVtjWbk8E/vejpVBMVcbZXr1s149V44
cnTqF75sX7XBx7MZW+LVxPZTfkM2tGIiLrYZD4ZF9iZvKEHiosCSgoJmdBr6
872h/oH0Td037R3NaOvW+KHtUIq37QJ35hbI+Kl6E5Mpf7FJq0pHWLQF4Wc/
bC2cLcOr7OfbFJRa8DEwYf/k9nKs33aW86xhC/5rWHX+WGs5gkLWNNg7t+Cs
rEKIcSjZl7hrUv4LacG3SbV89fOVeHoj2Ov9lxZIfWnWXyFehcVteia/KltQ
wpe1+cNYFR5pCip201owxvBTESqsBkdW7QrOFa14enZij3Z0De5ufdEnsrMV
hzgvaR55VIvpIIO8gxqtoO8x/Fd/vQ6OXOtfGFi3YrdwntK8cT1odvW2jp6t
sLH8Wx10tgE2LaGqAbGtqCiYiLqj04h+9fOiSQWteFLnQPM+2wSLDKGpko5W
7LDLn3th3Ix2qca/fQutoEQvZjvZtMDo+ctYbtE2WK6r8Z90b0U9x4V74kpt
UM5STGh92Yazthv0lA3byHV5SnNG7ShvapK54NwGry9Rcbxj7dBUe8XtHNKG
eXbfkL1HB4rTjZqDvrRh/8PtN4WFO3FMUuTLp8o23E0z2dOT2kn2lRbfMlob
tg/07Es91YXXC2WfbvG2oyd1Y6bZYBeM9ieLPBJsR6Ro1pJ6r24IX3/mHSjV
DlMn8c0M6R7Ux9hNRsm3o69GPeRlSQ9CGk+bJqu0Y3lkpnTy9V6cXSX7N1e3
Hda/FaPXCfRB4OTKA6Wm7fjLpDpnf+1D+X3a20b7dshb+bt7XOyHX1r5ygG3
dogPazYY8gxAczjlLtOvHQpvHe12JQ+AXyKgf9Hrdkh8Wus8cm4QxedvnF3z
sR2cVu4p3pQhPPHXyd+c047TOZzGU0lDOPZLTkbuTztkeJLct10YBtf8qlA0
tuOExOLlGxaPIF9+gqI10I47cdachWkjuH+t0s5ouh3Hj3yOlrAYhdKb1Kar
vB24ks8akl89BlZ94AkXwQ6k3P8SNv1jDBkrbn72lOoAbYdT3tcDNDipnhEL
ke9AC6f0Aa1AGuTv7fV9q9IB1qyI55EhGiY+r2am6nZAaYt13fNj40gZpJt9
N+2Af/yvuhOvx2ErXl32z74DUe7pfCbT45A59+Vgq1sHdvPstWnTncCgX1Dc
sB9pzzxUWfxxAvGFjgLsiA5IBn75KcpHh9Xs2ft8HzvwKrrvbZcFHZJ79w2u
y+lA4hGj50Lf6ei0Xqu/5U8HIvTHWr+LMBAVNfldvrEDJwv/BrfcYeBiXc1O
lYEOrEhgj9nUM7BxeXqYznQH5q1n7ez2T6LhWMgiE95OpDUbs7uCJvHC1emG
rWAn/qzzNC+mT0IvVb/lrlQnPuacKhU6M4XVA/vVfOU7oXiQvq86dQoVYuvS
wlQ6cV7zbueEABPP9Jmb4nVJf/59WXY3mTj1X93TdNNOPAvk5j1WzcSSn1+n
f9p3Iiybd/Dyvmn8Zr2wqHLrxHxbnV9lyDQ85ZzLO/w6cZnbjOYyPY3jV84p
0SI60XSYqXjGcAaUSMX4+cROFGhX/dbNmcH3mvVrluV0ouf+5cJroiy4LZ1x
2/CnE84C45H+7iwcVmkY2tbYibm0+U2fO1lgu2QaKA50YveWB6t+HmMjMyWs
QHW6Ew+7Dxl+jmPjdp/Lbj3eLpQuwUv7xbPYJ2oYbi7YhXPLpTIGrWdBP3uQ
10GqC3uW9lBX/pnFJ1/hm+7yXQjzSND4t2MOdj9YrX4qXThtGxK69ukcds40
qkfoduFvltKf8qE5DO3OTv9g2gWdWWPtUfV5JFiFb86y70LNN4vwCwnzuBzh
6lfs1oW0oRMWPLwLkKq+wKr16wKfS8O9ZvMFdPErWfVEdOGBQ37jn7wFRB/Z
WElPJM/1du/7pss4qJecZw9z5XRB1d3E7NxBDqpIcnPCyj9dUDOMOfXDioPa
1JOzVqyxC4Ju/vIvAjmoYRsjHuwc6II1P5fJv1wOqsGZeyOHpruwwTDsnHk/
B3Wtj/F5dd5u6H2uoGgKcFKr8g8XnhPsBt1vlePDQ5zUAKaI3GWpbkSHjG7g
sOCknt41/+qWfDdYa0sSv/lyUpdZti5+pNKN1Asx9K+pnNQ/4d8cA3W78eOs
0nBPPSfVu/J1e5Qp6f/pz+ej85zUE3xumsn23Xg14O1UvJmLuoh6KSPXrRtt
ErYHbqhyUQucIFnq143VKx35FKy5qA8+ivk3RnSjs94qabUvFxXdC+z+xG7w
RYhUcCRyUeeE2y8zs7vRPP0zk/mHi5qtk1+16E83kqwvnxwf5KK6eEVhTWM3
1K9aL/QsplAV8tw/bB7oRslMNOuvFIU6OWmyTm66G7rZr1uijlCon2WOeIC3
B3pyexP0jCjUG+biY6cEe3Dbp21J1y0KdfdLzgtGUj0w1UqSgR+FOlLeUXRV
vge5MlE/LsVSqB94f+xxUekBxUBa+2A2hWqt/Oa1p24P0h5Y0gv+Uahbbz3k
DzEl7ddq48c7KdSeD2ZOb+174Hw5ySiDQaHGdB7tTHXrwXKVPTLLFnFTTYUk
tL779SD4neSFntXcVDFtSta/iB68SNifu1+cm9rypEuqNbEHcS9a85gy3NTw
3IKA4ewevAwJfSymwE09x4iZY5F1Xj3BdHscuKmCOx5Z8zX2QHA996rHqtzU
alOLmnUDPWjIixtK1+CmBoYeO7JlugeLrl2fUjjNTdX+J/lRnrcXTxhrJHl0
uKnLeRYJqQj2QvFUkqI4iUuVeh7pSJH2vxzcvqS/z81C2iX5Xtg0b9h+QpOb
evJ9rJGtSi/8dPjSL5zgpvJ0PC6+q9sL/sy0z+VUburPdVbyvqa90LxTZZui
yE19qKUaFWbfC/21ajq8u7mp1Mdblsa79aJt8G1TlwQ3dT6bxzndrxcyVn0v
9NdxU3Mmert+RvTCd9fN1ht83NQ7236drkrsxZnFht/UWBSqosm77I7sXvR9
5K6gD1CoUyGeW2klvVi5Y572pJ5C/fL38vP5hl6E9XyZES6iUB24Ty4sHeiF
rHr30+JUClX2kPS1DdO9KAsLrYh/TaGO3lhct423DzW8O/hqvCnUxPj+o4qC
fVAVuGpu5UihXm0rTlKV6sONroCgWxcpVGnBBGE9+T7Yxhx5LXySQu3V9H5i
rtIH/+ppJxs5CvWth/XEDd0+jPK9b3AXplDNstQuupv2YWNU4e9rFAp10/i2
Ej/7PrRlxPphmIvaupV/f4RbH2KDG24ureGivro4GP3Brw/OXV8C23O5qIbB
JcuyIvpQNfDh4684Lur60vcuxYl9SAr03vznGRe1lsu3pza7D37c3dnjzlzU
oAPXdHpK+nB0j2w+zLiouvYaufSGPvA+usLzVYOLuvLdjm1cA31YQwsq09/H
RS1rWRK8croPnjEx6zaKcVGfrhnmEOPtBw4/e8bJx0VV1yi12SnYj3cVX1oW
Jjipix8m1h+S6od6etfbZS2c1KKMp8fU5Umc+KVV7Bcn9dGYTco5lX54iUou
3f6Jk3p0y6mNl3X7YVLHZyMazknlMN7pdcu0H/6B97RHH3FSvz1fxvCw74fu
ttxzPrac1LslI5cC3foR0+Ad12nAST3IWfYnyq8fIf9OafZROanTCkkKyRH9
KCuYOOW1jZOabusXk5vYj+/hnMvTV3FSHWNtV5Rm92PfylZH0xkO6p5mLdfG
kn5MLg84dbedg0oT2N3X39CPkyp3T8wUcVCT1FacYfb3gz+ofFdpIgfVxn3s
26LpfoyIux8ZDOCgbv/6b/sa3gEc2uTMVHPioPaPJIdsFhwAK/uWdtd5Dmqc
pD+XnNQAVusm1ycrcVAtLtjbQn4AR92L/rwX5aBuDtRuPKUygLkq98HohQW0
F8uqGukOQEMyJPFI/gLx3srUq6YDsDm8lSXvtkC8Ny7iYk/iPw/53JQWiPcq
vD3dBsC8l7F0y/Q88d6nyWC/ATDeF6vtTZ0n3gswfRsxgLWDIjapV+eJ9xz+
piYOQORv1M9P4vPEe7oHvmcP4MXZmI1H6+aI9/bE/isZwLt4s4tOvnPEewKr
WhsGsOvgvjPmynPEexN3h/sH8OyYVKwYbZZ4r6qfxRyAvpP3rYKoWeK9z2f5
eAex/fTWHVe0Z4n3nuevExzEU+60ZukFNvHeTZktUoN4LF9rJf6RTbx3JlRe
fhBvdOSv2hqyiffkuVVUBjFQ5mewk5dNvLfGXkd3EB8uRunf/cwi3mM0XTId
xOtU1sY7l1jEe9UnbO0HUdhm++34EhbxXtrnu26DcD06bDafPkO8Fyzm6zcI
p+MCUQVmM8R7t3zDIgZx7Tqj+cvyGeI9Pea7xEGcbfIPG8+aJt7bZ56ePYjD
5hsWQi9PE+8J/vtZMohTJncWlayZxo5zUwerGgYhWjOlFPODiQG/2riO/kF0
vY2LPHqDiXeF6QI05iASyjdaFW5iwnI25P48zxASfv7qPlExBYm9tweXCg7B
NvBoVM/DKXRYG+hvkBpCZKZib8a+KURGKfzYJj+ELyZJfxoHJmFct26XosoQ
wlKEEs0iJ7Fh+XSYqu4QbrvfiLbS/5/36hfpmQ5hLCu1n7X8f97LuGFuPwRW
7uLncr8ZxHuhLTfchjDY2jgr/JhBvOes5u43hI/L724sPMog3juf5hcxBBFV
+bBDXAzivQPiEYlD4E253OZZQCfeE/rvQ/YQVtMaf6c8oRPvzUxnlgyhcOPh
b1kadOK9BovihiGEGAg5vBOgE+9lldf2D4FqLCHu1DRBvPdSqYc5hANyN1Mk
4iaI9+7E03mGkfCl8cJ7hwniPcM1XILDGPn5SJzryATx3iH3lVLDoBqdDdu0
aoJ4b8OwqPww6vd83DzTOU68xzbYqTIMymvGvnvp48R7TQWHdIcxauTk/Mp3
nHgve7e66TB2+RbRjpmNE++9Cj9nP4yd+8wWmx8cJ967y3vZbRjOG4ZWda4e
J94zunnLbxgbS/XuJI7SiPeU2jwihmGk6ZTxoYRGvLdRIzBxGEexS/L3Oxrx
3lx6VPYwUtpN9Ece04j3WjYnlwzj3qGFNZyWNOK9XL/chmH0cK+/OnKMRrwX
wfrTPwyOysj34VI04r37Vo3MYaz4HhE9yUMj3rtY2c8zgoWF9S9LK8ZwyVlZ
mbl2BLnbKM9SQ8Ygkiz6fpHUCI7p2pU7GY2hqWd+7Rr5ERT7bNaZ3DyGsI1t
DzarjMDFYfWXpYOjMDiTNyKrO4Lvamt+v/40irU+kedhOgK/pVKDz1xGUZXv
VnjKfgSFO5t6fx0ZRQDzkpyR2wgaZ6K2y/GP4vQuasRVvxGcHLk4nVk5gmWW
m/hcIkYQvOb9nG74CP6Ec9zyTBzBZd17hjTzEXhXtrcHZ48gaPxcnZfMCE7w
fdd8WzICs7Pr7QUnh7GIGp2R2jCCTQXbnwXnDqPA6YHk9/4RXBRZ2cr9ZBgP
Ppr6/2OOwO280ForrWGg+8hsC88obAPuJOeQ+2JOePOV4bWjoBz7MbWsbQjZ
OlzVLMlRpBU/NzV9NwQXr07wyY8i2DpRI99uCAp5Pz6sUxnF2YFbsfKKQ5ic
fLNui+4oOONGF5dwDOGzjIeHvOkoUgJUa57+HsQNc/Oxo/ajqItRueUTOIjd
L1Uu6LiN4k67AVfFhUGMlEv8uuQ3ClnZoFZbsm594OXeaxsxigiR140OYwOw
Vu5+fTdxFPM5xZNDmQPYeusnv2/2KGxcNAL7Hw2g58Nbp7CSUdCWHrW5rT2A
mM5Hne8aRrFreFTo3cYBmApZaqX3jyJrC0P18UA/xLSPZ/1kjkKb48hxsa/9
aHkitaWKZwyZktEeDx73Izx3UWDH2jH41Fa0fD3bj/OMnrkxyTHMcu7i/SvZ
j3U7iqzn947BUWfPbMkkcYtpXM1SlTGsfH1INetXH56HPjmyQXcM5vdX5rx5
2Qedf1Yft5mOQfDBtmc+tn1YwXNCSNF+DK/TeXSciFv+Km19rOo2hoNRlgvW
Qn3wvck7ftZvDCYas/mXab1Qe99nZB4xBoysMrYv7gVvx6/iG4ljmBmToXhE
96JwXby8e/YYWkRy/0W49sJDyyvKr2QMx5tFmDn6vaA+vrI0omEMHy/fz23a
04v57JPOH/rHUG73+Dp9RS9yJqS7M5ljUMmTOzM7QtwdxC1tQaHBoEyjbKS0
BxtTGMZD/DT0Z0sE5RIXu/7pfu4gQIOqnew2k/960Nhb/XtGiIZC7Ub8tu3B
Aa7CBXdxGk5/tuAa1u5BqEjavsXbaMi07RbL2tsDpmLstWeyNFSEjEtLreuB
/tngaEFFGjIE5GZE2N1Is3tcFwEa9gsb5AS1dWON761lUidoYO+My3b52Y2b
cZYqiVo0UMi9nZvQjcrvei579WkQGw1QOf2sG3Itx5OzjGlYHfeRIXarG/7T
+3qOkHXjeF0/z6YL3RhbvWXDbxsarCfTNahHuqG1W1BH25GGN8t3b3PY2o2P
6jyeda40xOTG9L9b1o2lVlM5Fz1oOMS5kF9N78K1B70TPT408J6hKQ43dKHk
Va309UCyLontEOrK68K2jKKLjDAahEYctiTHdsGrKj3INZoGZrDV3hO+Xegb
jSvhSqBh60eTXTHkHKvK/4LDJ4WG8piQPTl6XYiV8ty/KoOG0tFTi/872AXu
I7dtQvNoEOfzo6wS64K50eU3Yr9o0NwqwTxG6cKP2wb1cWU0TJR+Xba1rxPi
z08s31VLQ76kqVt6SSfckxSOpbXQYEzZ2Ub/2Im231vvKPXQcMp3UU27fyeU
e9alFAzT4GdXMu12sxMRHIt71Rk00JuPHq3R68TshukNlWwaZIMrHXoUOnFB
oV/nPGUc/SGKN9KFOpGlW+/Zzj8Oi8yNS0+zOyBkW5x7WWAcBhm/+tKbO+Ds
nUEfFRrH2qteClO5Hah7G7/NSXwc9x6MNa6N7MD+/NBLc9LjiPT3uSPm3oHg
Jq/gR7Lj4BvpFBEx7QBjyvnPEsVxNCRrrxU62oEzAtaczzEO00uXLopKdCB1
53kF4RPjUGQ7fFbg7sAqNbXr0VpkH/u9/o59TzvsLQ7ESOuTfetRWkJVUTv+
uW1rSDYehxYr4JxNfDt2hQutULAch5E7Rf+4Tzv+S+c7/s1mHEr9ttrWNu0Y
rpi5c9xxHNUb6hw7tdqhMTKQUupK8q2zKs6Sa8f7xY29ZzzGsfne8XD2mnbw
SZZsbPIZhwg1qM5wvA1XSIXMAscRfOdwX0pmG34ZvvcaCBtHgcSfd7webdji
9PKbffQ4PIREZG1OteFxgA+DGU/qtco5ZWB9G7oT72x3SxnHev2E1949rVAp
vmrCkzGOkeMcgWc+t+JNl2HIf3njkFDXsdd82ArOBfXSNb/I9YoxR511W2Ei
fIjrVdk4zEdazOslWpG3b4eiRC2Zf1mQn81UC0R1Nti+bxnHnV0r2XIlLbhn
s+StXM84Bq/N60hGtqDZk92QMTyOhMOd3YdvteBQzNAKKmMc5wesXJw0W/Dy
W9PxX+xxKKhfrfop2YKZhj+uWpQJuPrnCIjON+PcZPanGv4J3Lu2falTfTO+
rkzsMxKYgIeC8tm8z80QlHkl0i1E+gu9fTD0rBm3Tjw9c018Aqs1ThQN2TSj
2uyu94T0BNyttMxT1Jux975NnovsBO4KNLzetq0ZgWFGkxyKEzgh4JR/YnEz
xr9o7vDCBJbeieZh9zVBu1zJdMWJCfD9VV0rX9yE5CGZFyFaE9AZKD3THd+E
5bwif0X0J7Br/fWiOe8mXN+8jBJrPIH7LO7NN681ofTwnKKM5QQSz118qXiq
CTvOj9h+tpnAL53a08d2N8HHseXtQccJuJjzNDxd1YSBZ38bv7uS+fwnYsnP
aMTJD7kr1TwmoMa/kZle24h3RR9Vy30m8FBF4IJfZiN4OiPuGgSS+mjkXPJ7
1QjLuf9SW8MmIOhiX5vm1oif6+/3W0ZPoOOC5/dF5o2QkLcVHYmfQP3LS4vc
VRvx8PTFs44pE9gw36Ysvb0RHVe1fNhfJ8D6Mrqae3kjqE+U8x/mTcA5dF20
0EQDIqN3TfH9moBeydhi+9oGsq+KygSUTeBqm7jaiuwGGNcvN1tfS/JdbkFb
iGxADn3+RWTLBP7F1RtrPG7AhhVjf7f0TCAp/a8h62oD7mxvoyQNTyBtj3bn
Wp0GNBz/d2AfYwJVihbdcQoNUDTNs8thk/ovnF+bJtqAF3eTY1UodKxL+Hz+
BE8Dpl5ENpXw0zHAmdBkPloPvc/PVukS5669uOjYirp6fClzO9EgRIex3Lth
zfx6rB60u2ciTseUqNpl0ff1cFhk8rlPmo5fZeeyPILqUbFJe8BWlo7NnP6r
Xd3qIatEFZtSoMMtXHcjx7V6PDOQ1bsHOhTvni9cZlCPUYdNvtwn6FjMFSjw
SqUep/xWfvfVoiOfuiUqWrYeiQkcTAF9Olyf259YLVqPJYU0mZfGdGwffqzd
vaQeV9vbzcQt6dD48egMD6sOv9nlofE2dPg/u/Lbur8O0uu+l+12pGOueF5g
vrYOnns+cX91peNCs9e7T4V16D0VfVDZg453iTFBDl/qcNw6wL7Qh45J+hRj
V0wd3j56EKcZSEf3tQTB6oA6UKJuNFeF0dHlUCut7V4Hs2xTgQvRdGQ0BOcE
2Nbhe63Oyc54Oh7y3BbyMqqD2MSR+9YpdDTu898pqV6H+8v2fKF9peNZvifT
QKEOLdKbB2/n0XHWpKVfULIOSscENi0UkXPGi1fX9FfWIfwSl/6TMjpeDsZS
l8/WgnVnwndZLR1231ZlK/TV4nxI5/egFjqO0xP8yypqkfGpkrmhhw6qzOPc
8uxarPv7Y2fMMB0l17TSlWNr4dSfar6dQcdeT2easF8taigxYZ/YdPzHe0Tp
qlMt5MWe/1OkMDCtucxx78VaPD/osSifn5ybluh/cDteiwm9m4dOCDCg7r1d
6rxMLXRumN8oE2LAv1ptV6lALVKennmnJ86A/GOPxb3TNVgRr9LSLM3AuOtz
3rTWGtgW7F1tIctABt9tl5M/a/C3VUJtSIGB42MFu1MSaiDDWu3mAAawluXA
9quB71rutBlVBni+qcUfcKzBoCxj0F2LAbsSvyqX8zVQ0+zetFifgW2Lr/CU
KNcg/nK1/jNjBmRHXyoqSNaA1+PnU0FLBgaKs4tL+Wpg9frLjwgbBrqER5SC
xqpRmPl2WtKRAVruq2PBNdWQrAnalejKQPO9pKya7Gp40B5Z7PVg4G7Z5OS5
N9XoXHLrZZYPAyuWz2aIeVfjyFbL8iOBDOwxyrSQtq9G1FE9nt9hDAQ6U1Jt
DaqxYHxcSTuaAdftG0uHlKtx0WWfQ108A9c/v30QsqWaeE8q/mIKA6+6/uM2
X15NvLe2tecrAyc+1e9Wmaoi3lu05noeA7Hb1w5saa0i3ptUYxQxIEa/1MIu
rCLe63VzLWPAvfTqmqSPVcR7tWlctQw4HWtZKh1cRbxXNOTdwsAtTQHpM3er
iPfSxVf1kHwFXlWsM68i3oszCB1mINOaX+CiWhXxXsh/YgxSD+brzct2VxHv
PSmIYzPQ96Zk07I1VcR7TjM7KZOwSY4tOj5dSbxntTuNfxKPFpUWRDZVEu/p
WyoJTIJ7qK+K+1sl8d6J8AKhSXzg8x64FFlJvKdQoS4+CUMNRkWEWyXx3lbe
SulJ3IxY/jrxYiXx3rrD52UnUfhu7MNdpUriPd6b7QqTcKDL6XIIVRLvMeMv
YxIGRc52MowK4r2+1lHVSUydaZ5j/q0g3qtb46RFYrskT6O4CuK9X+pzepOw
e7E2W/9eBfFehvsj40nURorGdetWEO/Fpy+xnMSgfJ4t79YK4r3Q4UCbSbjp
X/H+MVNOvOe1WdhxEq8u6Xtv+FNOvOd8LtqV9N+Xc0U4vJx474qftMckUi5F
iP22LifeO/cz2WcS19MsZ/YolBPvnWTtD5yEStpDFUtKOfGeouy3sEmYlu/M
bnn1j3hvm9Xx6EkcDsjP/Sb7j3hP6FVp/CRSp5Wsn/0oI97jqzyTMokWo1yW
g24Z0cwMb9PXSYi9bTn8X/tf4r2Bw2Z5k+CLvnCYcv0v8V7DzYGiSZQq3s5k
MUuJ934n2JeR8eek7oQ+KCXey2xj1kxiiWTOU07+UuK9hLVuLZP4yn0v1DDg
D/FemAZPzyQ+faxPLlr3h3jP58F/w5M4dFd3x5WIEuK9O1/XMCZxr15LwXRz
CfHe1ZFw9iQceyS8K+J+E+8ZSkhQplC/YXZz/fbfxHvq59/zT6GVj5USmFRM
vHfwmZzAFNaFf/cQ2VNMvLe9MENoCms83KWD0n4R7wmzIT6FDC2ppJUHfhHv
8cv9kp5C3eNxdmJOEfEe20pLdgorc2UjH1CLiPeGXtUoTGGD3LhP3M9C4r2m
SiNMYebYz4y9aoXEe38Wd6tOkXVJ7ia17CfxXrbyNa0p5Or0KHWf+Um898Fx
Qm8K4zu+39rfWEC8F/7exXgKzt3lI1qmBcR7vu0cllOI2UuZOz7wg3jPVdDL
ZgotJu15ex1+EO9d01zhOIUXZVp6crPfifeMHoa4TsEu95DOOc/vxHuaGSIe
U5DKvnL6x+rvxHtKo299pnAsx3ezT3Q+8Z6MpEzgFCysL9wtkc0n3tto+Dls
Cl4tTuNKHnnEe0v9D0ZPIShscLdK/DfivdnC7/FTCB1kOLSU5xLvDbNPpkwh
ruv95JG5HOK9Zrnyr1M4+OOlVuzOHOK9v5cN8qagnp+rpWSWTbyXG9FaNAX+
2qvUA+FZxHsfqyzLpjBVtyippD6TeC+Cb6SG5HfXrlBkQybx3n9wbJmCt8bP
34ZmGcR7926xu6fgoys59S7pK/He9Q8Ph6dwQHXurRTHV+I94w4+xhQ+fvjj
QtNPJ947tS6ATeqbwuEg+jmNeE/51HoKEzfW/P2XvyaNeG+XRyQ/E+HCAnc7
Xb8Q74lmbhFgYnt28D+v/s/Ee8vHPgoxcVs+/PYnw8/Ee/OS+8SZMHeV3q1X
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
f/x/AEDy3IY=
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Log10 mm\"", TraditionalForm], 
    FormBox["\"Likelihood\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Diameters of Nodules\"", TraditionalForm],
  PlotRange->{{0, 1.8830349826006825`}, {0, 2.5396141460602415`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7319533171808715`*^9, 3.7319533360523176`*^9}, 
   3.7319667589344015`*^9, 3.7319671584484367`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"7cbc640d-4896-4632-ad1e-30b89007914e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<diameters.pdf\>\""}],
      "}"}]}], ",", "diameter"}], "]"}]], "Input",
 CellChangeTimes->{{3.7319671693869333`*^9, 3.7319671743353195`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"c7c2885f-28ab-4b48-9c42-8fa2a599661c"],

Cell[BoxData["\<\"C:\\\\Users\\\\lhe\\\\cs109b\\\\cs109b-projectofchampions\\\
\\data\\\\diameters.pdf\"\>"], "Output",
 CellChangeTimes->{3.7319671752844667`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"a9ef3df7-00c0-48a9-8439-678d0b461b3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"loc", "=", 
  RowBox[{"SmoothDensityHistogram", "[", 
   RowBox[{
    RowBox[{"Values", "/@", 
     RowBox[{"summary", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<x loc.\>\"", ",", "\"\<y loc.\>\""}], "}"}]}], "]"}]}], 
    ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<XY Coordinate Density of Nodules\\n(Likelihood, Median \
Center-of-Mass)\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7319533626669574`*^9, 3.731953411207797*^9}, {
  3.7319534546989355`*^9, 3.7319534962482615`*^9}, {3.7319668257784443`*^9, 
  3.731966854034171*^9}, {3.731966888870047*^9, 3.731966996843384*^9}, {
  3.7319671785140557`*^9, 3.7319671790104656`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"7f15725a-ca56-4a41-b9e8-2ce7db425873"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxd3W2sF2QZx/ETCkdouBCVTdgcVqLDiIWFLwJOEYUyKVAEQRBQQJBH5Yg8
5nSSSg58WixsiQ8MMkIEUxlhJg4TBrYlrUxtaTZFLJTxMAyr7fr8/tt5xT77
73+us3vfN+y+r52ek+eMnNKuqalpTIempv//O7T3uH3rLvlmy/l9Og3ZP3ds
y6EvNXc+853B8cCtE5/+44ZL4xWDt41+aO7345nv333yF2tGxmds/saIz/9w
VPzcre88duPkMfGEllVHdg8ZF5962oBLL7pwQvz6Pw9f/t3lE+P1w4YtOHJ0
Urx409pH1k2/Lh7e9djvr3rj+rjnguGfdLh8anz4L4/3eHbHtHjXwBNDpvWd
Hv/00RFzuj06I57VYf3qXV1nxi0zTr644M5Zcde9Vx7odXR2/MnqUZ1mXjw3
fvPVpnO/c7DhXZ8+2a/Hunnx5j6jhx6ecFO8ZmK78Xu63Rzfef/GeY+/1vCc
nWOWL7l7fnz1kVPWXPnt1njwBZs2XXSi4a+MHbvz1K23xN1+3P7Pf525IP7c
jqcObv3yrfGBf41rd+9bDb/es7nblJ8sjF+44uneA36wKN5w5/iWszoujh94
9rRRB19seOn7W6a/vGhJPK37tct+1m9pfNnlnR5o/bBh/a195o3PvvfwNemP
9cf6Y/2x/lh/rD/WH+uP9cf6Y/2x/lh/rD/WH+uP9cf6Y/2x/jKv+mP9sf5Y
f6w/1h/rj/XH+mP9sf5y/tUf64/1x/pj/bH+WH+svx4DNm57fteE9Mf6Y/2x
/lh/rD/WH+uP9cf6Y/2x/lh/rD/WH+uP9cf6Y/2x/lh/mVf9sf5Yf6w/1h/r
j/XH+mP9sf5Yfzn/6o/1x/pj/bH+WH+sP9bfsMkvbHto4cT0x/pj/bH+WH+s
P9Yf64/1x/pj/bH+WH+sP9Yf64/1x/pj/bH+WH+ZV/2x/lh/rD/WH+uP9cf6
Y/2x/lh/Of/qj/XH+mP9sf5Yf6w/1t9p51+wevjKSemP9cf6Y/2x/lh/rD/W
H+uP9cf6Y/2x/lh/rD/WH+uP9cf6Y/2x/jKv+mP9sf5Yf6w/1h/rj/XH+mP9
sf5y/tUf64/1x/pj/bH+WH+sv5ffX9Xa/MTk9Mf6Y/2x/lh/rD/WH+uP9cf6
Y/2x/lh/rD/WH+uP9cf6Y/2x/lh/mVf9sf5Yf6w/1h/rj/XH+mP9sf5Yfzn/
6o/1x/pj/bH+WH+sP9bf7RuPj/zttuvSH+uP9cf6Y/2x/lh/rD/WH+uP9cf6
Y/2x/lh/rD/WH+uP9cf6Y/1lXvXH+mP9sf5Yf6w/1h/rj/XH+mP95fyrP9Yf
64/1x/pj/bH+WH+D5k3uu/C169Mf64/1x/pj/bH+WH+sP9Yf64/1x/pj/bH+
WH+sP9Yf64/1x/pj/WVe9cf6Y/2x/lh/rD/WH+uP9cf6Y/3l/Ks/1h/rj/XH
+mP9sf5Yf59evLvz196bkv5Yf6w/1h/rj/XH+mP9sf5Yf6w/1h/rj/XH+mP9
sf5Yf6w/1h/rL/OqP9Yf64/1x/pj/bH+WH+sP9Yf6y/nX/2x/lh/rD/WH+uP
9cf6e/5YvwMfnJia/lh/rD/WH+uP9cf6Y/2x/lh/rD/WH+uP9cf6Y/2x/lh/
rD/WH+sv86o/1h/rj/XH+mP9sf5Yf6w/1h/rL+df/bH+WH+sP9Yf64/1x/q7
ZfvDrzzW5Yb0x/pj/bH+WH+sP9Yf64/1x/pj/bH+WH+sP9Yf64/1x/pj/bH+
WH+ZV/2x/lh/rD/WH+uP9cf6Y/2x/lh/Of/qj/XH+mP9sf5Yf6w/1l+/29qv
u6bX9PTH+mP9sf5Yf6w/1h/rj/XH+mP9sf5Yf6w/1h/rj/XH+mP9sf5Yf5lX
/bH+WH+sP9Yf64/1x/pj/bH+WH85/+qP9cf6Y/2x/lh/rD/W378Hz77jrAEz
0h/rj/XH+mP9sf5Yf6w/1h/rj/XH+mP9sf5Yf6w/1h/rj/XH+mP9ZV71x/pj
/bH+WH+sP9Yf64/1x/pj/eX8qz/WH+uP9cf6Y/2x/lh/G5v/NHHvyBvTH+uP
9cf6Y/2x/lh/rD/WH+uP9cf6Y/2x/lh/rD/WH+uP9cf6Y/1lXvXH+mP9sf5Y
f6w/1h/rj/XH+mP95fyrP9Yf64/1x/pj/bH+WH8zdg8a+KMbZqY/1h/rj/XH
+mP9sf5Yf6w/1h/rj/XH+mP9sf5Yf6w/1h/rj/XH+su86o/1x/pj/bH+WH+s
P9Yf64/1x/rL+Vd/rD/WH+uP9cf6Y/2x/nqtXN+9Zdms9Mf6Y/2x/lh/rD/W
H+uP9cf6Y/2x/lh/rD/WH+uP9cf6Y/2x/lh/mVf9sf5Yf6w/1h/rj/XH+mP9
sf5Yfzn/6o/1x/pj/bH+WH+sP9bfuyO7HD/2wOz0x/pj/bH+WH+sP9Yf64/1
x/pj/bH+WH+sP9Yf64/1x/pj/bH+WH+ZV/2x/lh/rD/WH+uP9cf6Y/2x/lh/
Of/qj/XH+mP9sf5Yf6w/zvu/sxft37xhTuP9Xznv/8p5/1fO+79y3v+V8/6v
nPd/5bz/K+f9Xznv/8p5/1fO+79y3v+V8/6vnPd/5bz/K+f9Xznv/8p5/1fO
+79y3v+Z5/1fOe//ynn/V877v3Le/5Xz/q+c93/lvP8r5/1fOe//ynn/5/y9
/yvn/V857//Kef9Xzvu/ct7/lfP+r6y/r846dPUz185Nf6w/1h/rj/XH+mP9
sf5Yf6w/1h/rj/XH+mP9sf5Yf6w/1h/rj/WXedUf64/1x/pj/bH+WH+sP9Yf
64/1l/Ov/lh/rD/WH+uP9cf6Y/2dvu+JV+77oNEf64/1x/pj/bH+WH+sP9Yf
64/1x/pj/bH+WH+sP9Yf64/1x/pj/WVe9cf6Y/2x/lh/rD/WH+uP9cf6Y/3l
/Ks/1h/rj/XH+mP9sf5Yfwf7ju0/u3Ve+mP9sf5Yf6w/1h/rj/XH+mP9sf5Y
f6w/1h/rj/XH+mP9sf5Yf6y/zKv+WH+sP9Yf64/1x/pj/bH+WH+sv5x/9cf6
Y/2x/lh/rD/WH+tvz/2nr7us6ab0x/pj/bH+WH+sP9Yf64/1x/pj/bH+WH+s
P9Yf64/1x/pj/bH+WH+ZV/2x/lh/rD/WH+uP9cf6Y/2x/lh/Of/qj/XH+mP9
sf5Yf6w/1t+Th393Zq8Vjf5Yf6w/1h/rj/XH+mP9sf5Yf6w/1h/rj/XH+mP9
sf5Yf6w/1h/rL/OqP9Yf64/1x/pj/bH+WH+sP9Yf6y/nX/2x/lh/rD/WH+uP
9cf6u+eqBXeccvbN6Y/1x/pj/bH+WH+sP9Yf64/1x/pj/bH+WH+sP9Yf64/1
x/pj/bH+Mq/6Y/2x/lh/rD/WH+uP9cf6Y/2x/nL+1R/rj/XH+mP9sf5Yf6y/
6c/1/vjtRxr9sf5Yf6w/1h/rj/XH+mP9sf5Yf6w/1h/rj/XH+mP9sf5Yf6w/
1l/mVX+sP9Yf64/1x/pj/bH+WH+sP9Zfzr/6Y/2x/lh/rD/WH+uP9Tf0nL9N
3N57fvpj/bH+WH+sP9Yf64/1x/pj/bH+WH+sP9Yf64/1x/pj/bH+WH+sv8yr
/lh/rD/WH+uP9cf6Y/2x/lh/rL+cf/XH+mP9sf5Yf6w/1h/n/m3Jg/tW/7rR
H+f+rZz7t3Lu38q5fyvn/q2c+7dy7t/KuX8r5/6tnPu3cu7fyrl/K+f+rZz7
t3Lu38q5fyvn/q2c+7dy7t/KuX8zz/1bOfdv5dy/lXP/Vs79Wzn3b+Xcv5Vz
/1bO/Vs592/l3L85f/dv5dy/lXP/Vs79Wzn3b+Xcv5Vz/1bWX4e3hg5s/VZr
+mP9sf5Yf6w/1h/rj/XH+mP9sf5Yf6w/1h/rj/XH+mP9sf5Yf6y/zKv+WH+s
P9Yf64/1x/pj/bH+WH+sv5x/9cf6Y/2x/lh/rD/WH+vvH4P+88sRexr9sf5Y
f6w/1h/rj/XH+mP9sf5Yf6w/1h/rj/XH+mP9sf5Yf6w/1l/mVX+sP9Yf64/1
x/pj/bH+WH+sP9Zfzr/6Y/2x/lh/rD/WH+uP9bdz7ebufUbfkv5Yf6w/1h/r
j/XH+mP9sf5Yf6w/1h/rj/XH+mP9sf5Yf6w/1h/rL/OqP9Yf64/1x/pj/bH+
WH+sP9Yf6y/nX/2x/lh/rD/WH+uP9cf6e+yUqfd0+nujP9Yf64/1x/pj/bH+
WH+sP9Yf64/1x/pj/bH+WH+sP9Yf64/1x/rLvOqP9cf6Y/2x/lh/rD/WH+uP
9cf6y/lXf6w/1h/rj/XH+mP9cfbPp5xz/L3//Z7ZPy9n/7yc/fNy9s/L2T8v
Z/+8nP3zcvbPy9k/L2f/vJz983L2z8vZPy9n/7yc/fNy9s/L2T8vZ/+8nP3z
cvbPy9k/N8/+eTn75+Xsn5ezf17O/nk5++fl7J+Xs39ezv55Ofvn5eyfO3/7
5+Xsn5ezf17O/nk5++fl7J+Xs39e1t+kXXunvXS00R/rj/XH+mP9sf5Yf6w/
1h/rj/XH+mP9sf5Yf6w/1h/rj/XH+mP9ZV71x/pj/bH+WH+sP9Yf64/1x/pj
/eX8qz/WH+uP9cf6Y/2x/lh/LRfesf/nt9+a/lh/rD/WH+uP9cf6Y/2x/lh/
rD/WH+uP9cf6Y/2x/lh/rD/WH+sv86o/1h/rj/XH+mP9sf5Yf6w/1h/rL+df
/bH+WH+sP9Yf64/1x/o7d0X/IUs6L0x/rD/WH+uP9cf6Y/2x/lh/rD/WH+uP
9cf6Y/2x/lh/rD/WH+uP9Zd51R/rj/XH+mP9sf5Yf6w/1h/rj/WX86/+WH+s
P9Yf64/1x/pj/Z388MCWMasb/bH+WH+sP9Yf64/1x/pj/bH+WH+sP9Yf64/1
x/pj/bH+WH+sP9Zf5lV/rD/WH+uP9cf6Y/2x/lh/rD/WX86/+mP9sf5Yf6w/
1h/rj/X35vBHzvv6FxelP9Yf64/1x/pj/bH+WH+sP9Yf64/1x/pj/bH+WH+s
P9Yf64/1x/rLvOqP9cf6Y/2x/lh/rD/WH+uP9cf6y/lXf6w/1h/rj/XH+mP9
sf62P3XlfV1+1eiP9cf6Y/2x/lh/rD/WH+uP9cf6Y/2x/lh/rD/WH+uP9cf6
Y/2x/jKv+mP9sf5Yf6w/1h/rj/XH+mP9sf5y/tUf64/1x/pj/bH+WH+svzVn
dGz66JLF6Y/1x/pj/bH+WH+sP9Yf64/1x/pj/bH+WH+sP9Yf64/1x/pj/bH+
Mq/6Y/2x/lh/rD/WH+uP9cf6Y/2x/nL+1R/rj/XH+mP9sf5Yf6y/1vm/mf3q
S43+WH+sP9Yf64/1x/pj/bH+WH+sP9Yf64/1x/pj/bH+WH+sP9Yf6y/zqj/W
H+uP9cf6Y/2x/lh/rD/WH+sv51/9sf5Yf6w/1h/rj/UXjx+7bctnLS3vHrrp
vJXLxzX2gctjtm69q+OqpXH2N7m+f9fg6/pfs6zRM/t+W7ed7+9B+Dx/L6I+
b/v7+3kffdx8XnOPQS3tV+3Y8vSJsS1/uO3tewftWBr7/OS4L1zRde3ifM5+
37bfN9/32873fZ+3/fsWfl7+f9dmvp/3X9ng5pc=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
+jgdZInmyiEyOMz59voOllkHY/BBL6WLXDuZC56dZbC7cebbmeOgcqGnc4S1
RhelR7nQxzlalmiudPeuRzmvr6+b7zjaWD19XeXaw1zw7OUZ8OvtnO8b9Cs9
CLNjjfG95D8/j2r6OCfKEs2VPjLo67ymNXOefE40Bh/0Uk6Va39zwR59lZPl
d6pzGJ/kupqezgBrjS7K2eVCH+cseaKvcro1PdN5O32nWe+zjLXVN1CuZ5sL
noM9A37nOm/uW4+X7XnGuB/aJGPLhT7OMFmiuXKBDC503kXf+fIZZgw+6KWM
kOvF5oIn+irD5TfCeWdzDCkXejqXWmt0Ua4qF/o4V8oTfRW0V/gcvcJ5b32X
+bYrjfXSN1KuV5kLnmM8o5/vZt7M/cfJEh2Vcebi95xnlQt9nBtliebKdTK4
wXlNa+Ye+dxoDD7opdwq1wnmgif6KjfL71bnZ+qbUC70dG6z1uiiTC4X+jh3
yxN9lTus6V3Oz9U30XrfbWywvtvlOtlc8JzqGfCb5vxU33qtbO8xdoq+8eVC
H2emLNFcuU8G9zsfoe9e+cw0Bh/0UubIdZa54DlbBqONM7/EHNPLhZ7OQ9Ya
XZT55UIfZ54s0Vx51Ls+7hz+6LI87DvmGRujb65c55sLngs8A35POYfT087h
h4YK/z3G71Dxezf8Pg71Rv/k+XKhlfOCXNFfeVYezzuH32LXwQYNlSWyetk5
LF903d3GX7R+6JksLxf6Ne/IDH2VV6wfeiavlwutnDdk+5rralo8L8vvLdc9
YG60VKaab6ksl7lupvFlcnrdvPB7zztRIzRLvrbe6Kl8KCd0UD6WK/or78vj
Q+fw+9R1sEFDZYWsvnAOy89cN8/4Z9YLPRN0TuaY+z35oa+yUobfer+aVs63
cv7adTUtni9k9r3rFpkbLZUF5vtStj+47gXjzNE6QR8D3YyaHgpzGKOv8qs1
Rv/k93KhlfOHbFa5bqnxVdb6L9fBDA2Vf2Tzn3OY/O26N4z/bb3QM0HnpKZf
wxzm6Kugt0K90DNBU6WmlcOcPkNrhXU1LZ7/ZIaGCutgRm60VOgR8rEOtuiv
sA72xNFhqWkM/SzDdfy3V3zolqBnQo3RP0FXpaaVwxw26K+gwwID4sxhiIYK
62CGhgqaKLBBO4U57NFdYR3siTNfIpNf7LN1/XdgmKOvgt4KcXRCuF9NK4c5
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
B9BGDTo=
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
VITXtbvd7kT6YHlUjywb0rrZ6QOvaPgVlLXa+SID3Bx6QVMaF90Z2xvTGtqR
tFlZ60ExwcX/PjQHyPLRwx56nmvNwJDpW7akKxP19wfcI3gcTBdbcg/0c/Fh
VriXjCMbE4oXfh/aRHDNl17D8nM9SHkRtvTrfi5+dTRaRX+hYIndmQ8BIsQ5
j1w8U3Ccj5SanIOjpDYczTg44N88CF26sfRWJwFUcGHgAI2KZE3aWgeCZ88+
Wfh8mNyNzILLX5MDGRAazjm3I4PQdX6QmdK9HpS/OfjQj5iXtTrSm9TShNBV
WpjueasH2bOzg04RHOY7VfvM20cIv6UDpa9HuzHp3VdxsJiBQ2r3Y2fJE++J
OJx+V64bl5xMp/57S8fmvkGLQKK377tQ9tOQ6O2DHx0mSv8j+CGtau9O10Gc
b+VdVrHuguSpHfHLdIlcEPyYozR7EDqnSXUMRz58tLNVtrDb0JbT1ed9oh9j
9VNFhod4+GMmuy/JuB17dfjGG8a7ETvv5jEXFS5yN5BT24yoeK1DaxSI8fH8
b/gWqR9sUDazPhpzGahWJFusHyG4KHzX2vT3LDxb4eR7pJXoOWEUF2kmFW7L
vR+RNRggR9HWTAm4yDZ9sRwDbfA7erTlsDcd/8mcP1dEnPchK8d49/oWUN0O
ymzNIvTnLf8q/jcf35effDFxqxXiF+erXBil4fO1sOtS5Xy82GKrMi+JhCfU
NGtVyQ58iPCdGKLzcL8qTJZG9NwN+dcSVxYy8Ozt/gd/vbhwJI88PLWJjZwl
iWq1jSysKdOaPpDDxhe5Ic5Wokf+9lVbonqPjbgo/w1d94l87s5TUOYJoM7/
9kSmjIO9c13fiYTS8DXu9pCJdx8iFxEfJvo/Jt48Hqr/D/u3i5TSKpIkKksq
KktdIiVpIRRtKnuJSpKIhCSholQqkRJSlBKKKHvIMhizzxgzw8woqSj6nc/9
+N3f7vnvvJ0Hznm/rut6XrOxYb+Rd2yBSyf2RzzUNJ8YhOVhGeX7jhwEsaLG
Oz60o/NdWrB/vBDHzov61Ar7sKQpQmWKbhfovz3ufpUVIUZVuIHbx0WzffaP
Hm0ydJZpsKcdFsFkisVp46Z+RK0V2Uu5U2BS2nfnZaII+0YKLBvNebDdkTxc
EUSFrRMj1Oq8CPHBDwNfqPCw6JG5e8tUKm68KOliLBVh8/73e8rRj+QZZ02z
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
5t9mDDgYnnlckUnDxM5NybJcDhoP2rUtmcaEp7uyWkpPL4zC/QJKb3MRPLgw
3PYpEzT/CK8dPQS/qedekw/qh+adVw8lfjAhGfJjxePubqw0HT8scO6HUlKa
81FiX5PdC+Wm/umGR9mnot8mXLj73r9vFsuE8VdPldTtZFiqGjrN1uMgsGjW
i+BmgqtEG3z2FVNguyp8BiuQicdm9TAoomPPwcmFlgKCTxstdy/8RMHHxtq/
2xIIPt4Y9F3mAxM7zTvSP9JISB7a9+TCWUKn1eoFI0TO9D8vGUie2YZAI9Wc
6w09SNewD/3v+wPyS902zNrQgjsJV8zmx3fjz7bChReXcpB6d22M89Fm+GZ4
bnu3vRt62rTqMz/ZCOK9UDFuaoXp8rUtt4x6EKVbcaGjmAPurYAzhoUdMLDK
K0goJsNTK4HUo8mBefXkDZIzCb9RsynXuEOBD+UE6/oVFqIX/bh98wkdz/JO
PmxPomH79WviH/0M9K9svSG7kAXvrYdDx2czUBB3tnqpGh3zjvSNWl1i49g5
q/vsFAZCLIO2jp6mYtpJVUlvBhty798ErHnFwOrkmL16U6iYXaKw/vV6NtFr
0k57nGPg9aLsuzaNVGhZatQeamFCot5O4vZ3OriiLVN0ztGx1uP9bf8UOtIf
z+yYc5mGaqutT9OEDHSvfGva0kdGWm/JCTKbgnOT0oT921i4tGPVjRJDEtaM
9EzOMu+F+oGRi69esDEzze/s8T9fsOrNdoc5VT14O1xyIWSQg9LeeWFaXs3I
bx69tnVbNy7Urvv/KrrueCrf/01JKRpIO5RVViVa6koqlewWhfTNaNmjhVBC
kSgpK6tIfJpSSnEce/Oc4Rg95xyJkl1C9bt//z5/XK/7ft/va/31rNj+U4CY
i/n2/1yroNggN9Nch40Ns+OP3pkhwKa4XsMtOeVQ1rSbku/KwpUZcgc7T/Ch
6tpuJVLNhE/RVxPzHgrGEeenuA/RWHa5W8YrshTL1sdxFt+mcLNmZO6CLBpK
oetPvWYycKT5rWSKNYV5rdeNrS7QcPOXX1DmzkCfucTW6TsoWKxuind3pLH7
fOP+XKVSOIRp2Ih4UzD/aWh76xaNJbs11t4KYiKqeFdpTwuFjbJz1bbRNLQa
IgNEeOWIlXYTmyD5nK60C53tSnz/0bRhNz+S51GZUXqZjfSU78P+uwWo2FA1
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
/mRNnMRfgv9/EXetnQ==
      "]], {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {28.221295318372796`, 105.76307798380057`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, FrameLabel -> {{
        FormBox["\"y\"", TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, DisplayFunction -> 
     Identity, AspectRatio -> 1, AxesLabel -> {None, None}, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {{
        FormBox["\"y\"", TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"GridLinesInFront" -> True}, 
     PlotLabel -> 
     FormBox["\"XY Coordinate Density of Nodules\\n(Likelihood, Median \
Center-of-Mass)\"", TraditionalForm], 
     PlotRange -> {{28.221295318372796`, 478.7787046816271}, {
      105.76307798380057`, 444.23692201619934`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -47.47109826589595}, 
                    Offset[{4., 0}, {7.5, -47.47109826589595}]}, {{7.5, 
                    17.557803468208103`}, 
                    Offset[{4., 0}, {7.5, 17.557803468208103`}]}, {{7.5, 
                    82.58670520231213}, 
                    Offset[{4., 0}, {7.5, 82.58670520231213}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -99.4942196531792}, 
                    Offset[{2.5, 0.}, {7.5, -99.4942196531792}]}, {{
                    7.5, -86.48843930635839}, 
                    Offset[{2.5, 0.}, {7.5, -86.48843930635839}]}, {{
                    7.5, -73.48265895953757}, 
                    Offset[{2.5, 0.}, {7.5, -73.48265895953757}]}, {{
                    7.5, -60.47687861271677}, 
                    Offset[{2.5, 0.}, {7.5, -60.47687861271677}]}, {{
                    7.5, -34.46531791907514}, 
                    Offset[{2.5, 0.}, {7.5, -34.46531791907514}]}, {{
                    7.5, -21.459537572254337`}, 
                    Offset[{2.5, 0.}, {7.5, -21.459537572254337`}]}, {{
                    7.5, -8.453757225433533}, 
                    Offset[{2.5, 0.}, {7.5, -8.453757225433533}]}, {{7.5, 
                    4.552023121387273}, 
                    Offset[{2.5, 0.}, {7.5, 4.552023121387273}]}, {{7.5, 
                    30.563583815028885`}, 
                    Offset[{2.5, 0.}, {7.5, 30.563583815028885`}]}, {{7.5, 
                    43.56936416184971}, 
                    Offset[{2.5, 0.}, {7.5, 43.56936416184971}]}, {{7.5, 
                    56.57514450867049}, 
                    Offset[{2.5, 0.}, {7.5, 56.57514450867049}]}, {{7.5, 
                    69.58092485549132}, 
                    Offset[{2.5, 0.}, {7.5, 69.58092485549132}]}, {{7.5, 
                    95.59248554913293}, 
                    Offset[{2.5, 0.}, {7.5, 95.59248554913293}]}, {{7.5, 
                    108.59826589595374`}, 
                    Offset[{2.5, 0.}, {7.5, 108.59826589595374`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
                    TemplateBox[{"10", 
                    RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -47.47109826589595}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000010\"", 0.00001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 17.557803468208103`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.000015\"", 0.000015, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 82.58670520231213}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "2.4301194107130768`*^-9", ",", 
                   "0.000017276718337744826`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7319533828495226`*^9, 3.7319534117309065`*^9}, {
   3.7319534568497014`*^9, 3.7319534969534807`*^9}, {3.7319669218219557`*^9, 
   3.7319669354846187`*^9}, {3.7319669679796095`*^9, 3.731966998031552*^9}, 
   3.731967179688853*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"046a0c12-da19-44b2-b57f-9c5c638dd17c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<locs.pdf\>\""}], 
     "}"}]}], ",", "loc"}], "]"}]], "Input",
 CellChangeTimes->{{3.731967181876809*^9, 3.731967196653411*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"52523670-4669-479e-82c1-528c171263a3"],

Cell[BoxData["\<\"C:\\\\Users\\\\lhe\\\\cs109b\\\\cs109b-projectofchampions\\\
\\data\\\\locs.pdf\"\>"], "Output",
 CellChangeTimes->{3.7319671978904686`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"04b7c982-e5b9-490f-b51f-27e894252045"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slice", "=", 
  RowBox[{"SmoothHistogram", "[", 
   RowBox[{
    RowBox[{"summary", "[", 
     RowBox[{"All", ",", "\"\<slice no.\>\""}], "]"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Slice Number\>\"", ",", "\"\<Likelihood\>\""}], "}"}]}], 
    ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Slices where Nodules Occur\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.731953552134597*^9, 3.7319535566066084`*^9}, {
  3.731967030212473*^9, 3.7319670589083033`*^9}, {3.731967208685972*^9, 
  3.731967209315341*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0970f8b8-506b-430c-a85a-3412a5b505ae"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
N/JrL81Dw41Z80z8v//7/b/x/weinFue
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Slice Number\"", TraditionalForm], 
    FormBox["\"Likelihood\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Slices where Nodules Occur\"", TraditionalForm],
  PlotRange->{{-26.879996675489366`, 500.5577818794791}, {
    0, 0.008065199287465578}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7319535570836697`*^9, 3.7319670644479265`*^9, 
  3.731967209695014*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"2fcaa63e-91f1-4c59-b058-36668d488cfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<slices.pdf\>\""}], 
     "}"}]}], ",", "slice"}], "]"}]], "Input",
 CellChangeTimes->{{3.7319672110627313`*^9, 3.7319672195530076`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"dcf0b623-0818-4913-94ee-fcd4c3efc91f"],

Cell[BoxData["\<\"C:\\\\Users\\\\lhe\\\\cs109b\\\\cs109b-projectofchampions\\\
\\data\\\\slices.pdf\"\>"], "Output",
 CellChangeTimes->{3.7319672204166956`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"5c0b9de8-0adf-4cf0-9768-bd310bfa8fe0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"noduleCounts", "=", 
   RowBox[{"SemanticImport", "[", 
    RowBox[{"FileNameJoin", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<lidc-idri nodule counts (6-23-2015).xlsx\>\""}], "}"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7320108697045774`*^9, 3.7320109119775457`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e32ab716-d96f-45a0-a835-b418b92951c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"noduleCounts", "=", 
  RowBox[{
   RowBox[{"noduleCounts", "[", 
    RowBox[{"All", ",", 
     RowBox[{";;", "4"}]}], "]"}], "//", "Dataset"}]}]], "Input",
 CellChangeTimes->{{3.7320109206730223`*^9, 3.7320109415626235`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b60e2077-a36b-4aeb-9f6d-845c2f637128"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 1019, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TCIA Patent ID", "Total Number of Nodules*", 
            "Number of Nodules >=3mm**", "Number of Nodules <3mm***"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 1019], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "TCIA Patent ID"} -> 
           1, {All, "Total Number of Nodules*"} -> 
           1, {All, "Number of Nodules >=3mm**"} -> 
           1, {All, "Number of Nodules <3mm***"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "TCIA Patent ID" -> 
              TypeSystem`PackageScope`AtomShape[134.40000000000003`], 
              "Total Number of Nodules*" -> 
              TypeSystem`PackageScope`AtomShape[60], 
              "Number of Nodules >=3mm**" -> 
              TypeSystem`PackageScope`AtomShape[60], 
              "Number of Nodules <3mm***" -> 
              TypeSystem`PackageScope`AtomShape[60]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1901908517], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TCIA Patent ID", "Total Number of Nodules*", 
            "Number of Nodules >=3mm**", "Number of Nodules <3mm***"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 1019], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1901908517]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TCIA Patent ID\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TCIA Patent ID\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1967341757][{All, "TCIA Patent ID"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[All, "TCIA Patent ID"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Total Number of Nodules*\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Total Number of Nodules*\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1967341757][{All, "Total Number of Nodules*"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[All, "Total Number of Nodules*"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Number of Nodules >=3mm**\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Number of Nodules >=3mm**\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1967341757][{All, "Number of Nodules >=3mm**"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[All, "Number of Nodules >=3mm**"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Number of Nodules <3mm***\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Number of Nodules <3mm***\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1967341757][{All, "Number of Nodules <3mm***"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[All, "Number of Nodules <3mm***"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0001", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[1, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[1, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[1, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[1, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0002", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[2, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[2, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[2, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[2, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0003", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[3, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[3, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[3, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[3, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0004", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[4, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[4, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[4, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[4, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0005", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[5, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[5, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[5, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[5, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0006", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[6, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[6, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[6, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[6, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0007", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[7, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[7, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[7, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[7, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0008", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[8, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[8, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[8, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[8, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0009", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[9, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[9, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[9, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[9, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0010", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[10, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[10, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[10, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[10, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0011", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[11, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[11, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[11, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[11, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0012", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[12, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[12, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[12, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[12, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0013", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[13, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["34."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[13, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[13, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["31."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[13, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0014", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[14, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[14, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[14, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[14, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0015", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[15, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[15, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[15, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[15, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0016", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[16, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[16, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[16, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[16, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0017", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[17, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[17, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[17, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[17, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0018", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[18, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[18, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[18, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[18, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0019", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[19, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[19, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[19, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[19, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["LIDC-IDRI-0020", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[20, 
                   Key["TCIA Patent ID"]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[20, 
                   Key["Total Number of Nodules*"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[20, 
                   Key["Number of Nodules >=3mm**"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
                  GeneralUtilities`Slice[20, 
                   Key["Number of Nodules <3mm***"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1019 (-20), {1, 1019 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 1019 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1019, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 1019 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1019 20, {1, 1019 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1019 (-20), {1, 1019 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 1019 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1019, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 1019 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    1019 20, {1, 1019 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967341757},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967341757},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967341757},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967341757},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967341757},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967341757][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967341757]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967341757][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {715., {279., 285.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7320109427452936`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"159f0c42-5b82-457f-b74c-ecefaac87557"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Counts", "[", 
   RowBox[{"noduleCounts", "[", 
    RowBox[{"All", ",", "\"\<Total Number of Nodules*\>\""}], "]"}], "]"}], "//",
   "KeySort"}]], "Input",
 CellChangeTimes->{{3.73201106525442*^9, 3.7320110677769403`*^9}, {
  3.732011174623446*^9, 3.7320111759263663`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"e4957a78-ae0f-49dd-9176-d354b2169fa2"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 47, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 47], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[60], 
            TypeSystem`PackageScope`AtomShape[34]]], 20, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1559200913], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 47], "HandleQ" -> True, "RowTarget" -> 20,
         "Data" -> TypeSystem`PackageScope`CacheHandle[1559200913]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["0."], 
                    Style[
                    RawBoxes["0."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[0.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[0.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[0.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1."], 
                    Style[
                    RawBoxes["1."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[1.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[1.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["107"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[1.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2."], 
                    Style[
                    RawBoxes["2."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[2.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[2.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["120"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[2.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["3."], 
                    Style[
                    RawBoxes["3."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[3.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[3.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["106"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[3.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["4."], 
                    Style[
                    RawBoxes["4."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[4.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[4.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["116"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[4.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["5."], 
                    Style[
                    RawBoxes["5."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[5.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[5.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["86"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[5.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["6."], 
                    Style[
                    RawBoxes["6."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[6.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[6.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[6.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["7."], 
                    Style[
                    RawBoxes["7."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[7.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[7.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["73"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[7.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["8."], 
                    Style[
                    RawBoxes["8."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[8.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[8.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["46"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[8.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["9."], 
                    Style[
                    RawBoxes["9."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[9.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[9.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["39"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[9.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["10."], 
                    Style[
                    RawBoxes["10."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[10.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[10.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["27"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[10.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["11."], 
                    Style[
                    RawBoxes["11."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[11.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[11.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[11.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["12."], 
                    Style[
                    RawBoxes["12."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[12.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[12.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[12.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["13."], 
                    Style[
                    RawBoxes["13."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[13.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[13.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[13.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["14."], 
                    Style[
                    RawBoxes["14."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[14.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[14.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[14.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["15."], 
                    Style[
                    RawBoxes["15."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[15.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[15.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[15.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["16."], 
                    Style[
                    RawBoxes["16."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[16.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[16.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[16.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["17."], 
                    Style[
                    RawBoxes["17."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[17.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[17.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[17.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["18."], 
                    Style[
                    RawBoxes["18."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[18.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[18.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[18.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["19."], 
                    Style[
                    RawBoxes["19."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][{
                    Key[19.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                   GeneralUtilities`Slice[
                    Key[19.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
                  GeneralUtilities`Slice[
                   Key[19.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    47 (-20), {1, 47 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 47 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    47, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 47 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    47 20, {1, 47 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    47 (-20), {1, 47 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 47 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    47, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 47 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    47 20, {1, 47 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 112054937]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[112054937][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {238., {268., 274.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7320110685333805`*^9, 3.732011176417122*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"8909965c-dd35-4f3a-92f2-a2afbc3bdf27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nodules", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"noduleCounts", "[", 
       RowBox[{"All", ",", "\"\<Total Number of Nodules*\>\""}], "]"}], ",", 
      RowBox[{"LessEqualThan", "[", "30", "]"}]}], "]"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Count\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Number of Nodules per Patient\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7320109619017153`*^9, 3.732011039547242*^9}, {
  3.7320111360088177`*^9, 3.7320111651062555`*^9}, {3.7320112314583864`*^9, 
  3.732011243488597*^9}, {3.7320117419647875`*^9, 3.7320118146805563`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a6183f49-e3c9-4081-8476-6b6e4e112aac"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.7034999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.7034999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0.5, 20.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{27.235188150520415`, 38.19516903845657}, {
          74.97161603537711, 107.82840450262978`}}],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 107.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{37.69516903845657, 
          48.655149926392724`}, {-65.78041379717197, 107.82840450262978`}}],
        StatusArea[#, 107]& ,
        TagBoxNote->"107"],
       StyleBox["107", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[107, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2.5, 120.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{48.155149926392724`, 
          59.11513081432888}, {-86.81232630088621, 107.82840450262978`}}],
        StatusArea[#, 120]& ,
        TagBoxNote->"120"],
       StyleBox["120", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[120, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3.5, 106.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{58.61513081432888, 
          69.57511170226503}, {-64.16257437380935, 107.82840450262978`}}],
        StatusArea[#, 106]& ,
        TagBoxNote->"106"],
       StyleBox["106", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[106, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4.5, 116.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.07511170226503, 
          80.03509259020119}, {-80.34096860743568, 107.82840450262978`}}],
        StatusArea[#, 116]& ,
        TagBoxNote->"116"],
       StyleBox["116", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[116, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5.5, 86.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{79.53509259020119, 
          90.49507347813734}, {-31.80578590655668, 107.82840450262978`}}],
        StatusArea[#, 86]& ,
        TagBoxNote->"86"],
       StyleBox["86", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[86, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6.5, 83.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{89.99507347813734, 
          100.9550543660735}, {-26.952267636468775`, 107.82840450262978`}}],
        StatusArea[#, 83]& ,
        TagBoxNote->"83"],
       StyleBox["83", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[83, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6.5, 0}, {7.5, 73.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{100.4550543660735, 
          111.41503525400965`}, {-10.77387340284244, 107.82840450262978`}}],
        StatusArea[#, 73]& ,
        TagBoxNote->"73"],
       StyleBox["73", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[73, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7.5, 0}, {8.5, 46.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{110.91503525400965`, 121.8750161419458}, {
          32.90779102794865, 107.82840450262978`}}],
        StatusArea[#, 46]& ,
        TagBoxNote->"46"],
       StyleBox["46", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[46, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8.5, 0}, {9.5, 39.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{121.3750161419458, 132.33499702988195`}, {
          44.232666991487086`, 107.82840450262978`}}],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9.5, 0}, {10.5, 27.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{131.83499702988195`, 142.79497791781813`}, {
          63.646740071838686`, 107.82840450262978`}}],
        StatusArea[#, 27]& ,
        TagBoxNote->"27"],
       StyleBox["27", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10.5, 0}, {11.5, 20.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{142.29497791781813`, 153.25495880575426`}, {
          74.97161603537711, 107.82840450262978`}}],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{11.5, 0}, {12.5, 22.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{152.75495880575426`, 163.7149396936904}, {
          71.73593718865186, 107.82840450262978`}}],
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{12.5, 0}, {13.5, 16.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{163.2149396936904, 174.1749205816266}, {
          81.44297372882765, 107.82840450262978`}}],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{13.5, 0}, {14.5, 20.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{173.6749205816266, 184.63490146956272`}, {
          74.97161603537711, 107.82840450262978`}}],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{14.5, 0}, {15.5, 17.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{184.13490146956272`, 195.0948823574989}, {
          79.82513430546501, 107.82840450262978`}}],
        StatusArea[#, 17]& ,
        TagBoxNote->"17"],
       StyleBox["17", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{15.5, 0}, {16.5, 11.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{194.5948823574989, 205.55486324543503`}, {
          89.53217084564082, 107.82840450262978`}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{16.5, 0}, {17.5, 8.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{205.05486324543503`, 216.0148441333712}, {
          94.38568911572871, 107.82840450262978`}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{17.5, 0}, {18.5, 7.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{215.5148441333712, 226.47482502130734`}, {
          96.00352853909135, 107.82840450262978`}}],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{18.5, 0}, {19.5, 10.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{225.97482502130734`, 236.93480590924352`}, {
          91.15001026900345, 107.82840450262978`}}],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{19.5, 0}, {20.5, 12.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{236.43480590924352`, 247.39478679717965`}, {
          87.91433142227818, 107.82840450262978`}}],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{20.5, 0}, {21.5, 8.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{246.89478679717965`, 257.8547676851158}, {
          94.38568911572871, 107.82840450262978`}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{21.5, 0}, {22.5, 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{257.3547676851158, 268.31474857305193`}, {
          100.85704680917925`, 107.82840450262978`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{22.5, 0}, {23.5, 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{267.81474857305193`, 278.77472946098817`}, {
          102.47488623254188`, 107.82840450262978`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{23.5, 0}, {24.5, 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{278.27472946098817`, 289.2347103489243}, {
          104.09272565590452`, 107.82840450262978`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{24.5, 0}, {25.5, 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{288.7347103489243, 299.6946912368604}, {
          100.85704680917925`, 107.82840450262978`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{25.5, 0}, {26.5, 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{299.1946912368604, 310.15467212479655`}, {
          104.09272565590452`, 107.82840450262978`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{26.5, 0}, {27.5, 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{309.65467212479655`, 320.6146530127328}, {
          104.09272565590452`, 107.82840450262978`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{27.5, 0}, {28.5, 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{320.1146530127328, 331.0746339006689}, {
          104.09272565590452`, 107.82840450262978`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{28.5, 0}, {29.5, 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{330.5746339006689, 341.53461478860504`}, {
          105.71056507926714`, 107.82840450262978`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{29.5, 0}, {30.5, 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{341.03461478860504`, 351.99459567654117`}, {
          105.71056507926714`, 107.82840450262978`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, 
    FormBox["\"Count\"", TraditionalForm]},
  AxesOrigin->{-1.12, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox["\"Number of Nodules per Patient\"", TraditionalForm],
  PlotRange->{{-0.5, 30.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.732011048454894*^9, {3.732011148625523*^9, 3.7320111657610016`*^9}, {
   3.7320117698391647`*^9, 3.732011779983431*^9}, 3.732011815178583*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"39dad244-447f-4ebf-be9f-77285b079256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<nodules.pdf\>\""}], 
     "}"}]}], ",", "nodules"}], "]"}]], "Input",
 CellChangeTimes->{{3.732012004054327*^9, 3.7320120235574903`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"94bf0ba0-d2ef-417e-9ac4-9bbd8c91fcbe"],

Cell[BoxData["\<\"C:\\\\Users\\\\lhe\\\\cs109b\\\\cs109b-projectofchampions\\\
\\data\\\\prelim_EDA\\\\nodules.pdf\"\>"], "Output",
 CellChangeTimes->{3.7320120326081705`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"ffc5506a-9ac8-4f6f-80d4-78c1900d1796"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Counts", "[", 
   RowBox[{"noduleCounts", "[", 
    RowBox[{"All", ",", "\"\<Number of Nodules >=3mm**\>\""}], "]"}], "]"}], "//",
   "KeySort"}]], "Input",
 CellChangeTimes->{{3.732011839969866*^9, 3.7320118473769617`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"7a587354-5172-49ba-b109-b9976c130fac"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 20, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 20], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[60], 
            TypeSystem`PackageScope`AtomShape[34]]], 20, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[735722847], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 20], "HandleQ" -> True, "RowTarget" -> 20,
         "Data" -> TypeSystem`PackageScope`CacheHandle[735722847]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["0."], 
                    Style[
                    RawBoxes["0."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[0.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[0.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["135"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[0.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1."], 
                    Style[
                    RawBoxes["1."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[1.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[1.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["297"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[1.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2."], 
                    Style[
                    RawBoxes["2."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[2.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[2.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["210"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[2.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["3."], 
                    Style[
                    RawBoxes["3."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[3.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[3.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["131"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[3.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["4."], 
                    Style[
                    RawBoxes["4."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[4.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[4.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["73"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[4.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["5."], 
                    Style[
                    RawBoxes["5."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[5.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[5.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["49"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[5.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["6."], 
                    Style[
                    RawBoxes["6."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[6.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[6.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[6.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["7."], 
                    Style[
                    RawBoxes["7."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[7.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[7.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["27"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[7.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["8."], 
                    Style[
                    RawBoxes["8."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[8.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[8.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["24"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[8.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["9."], 
                    Style[
                    RawBoxes["9."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[9.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[9.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[9.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["10."], 
                    Style[
                    RawBoxes["10."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[10.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[10.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[10.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["11."], 
                    Style[
                    RawBoxes["11."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[11.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[11.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[11.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["12."], 
                    Style[
                    RawBoxes["12."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[12.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[12.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[12.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["13."], 
                    Style[
                    RawBoxes["13."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[13.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[13.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[13.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["14."], 
                    Style[
                    RawBoxes["14."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[14.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[14.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[14.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["15."], 
                    Style[
                    RawBoxes["15."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[15.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[15.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[15.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["16."], 
                    Style[
                    RawBoxes["16."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[16.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[16.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[16.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["21."], 
                    Style[
                    RawBoxes["21."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[21.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[21.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[21.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["23."], 
                    Style[
                    RawBoxes["23."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[23.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[23.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[23.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2669."], 
                    Style[
                    RawBoxes["2669."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][{
                    Key[2669.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                   GeneralUtilities`Slice[
                    Key[2669.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
                  GeneralUtilities`Slice[
                   Key[2669.]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 435429911]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[435429911][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {114., {255., 261.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7320118496237926`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"13a084d6-f57a-427c-8437-ca52dac3be94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nodulesLarge", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"noduleCounts", "[", 
       RowBox[{"All", ",", "\"\<Number of Nodules >=3mm**\>\""}], "]"}], ",", 
      RowBox[{"LessEqualThan", "[", "12", "]"}]}], "]"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Nodules\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of Large (\[GreaterEqual]3mm) Nodules per Patient\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7320112025062795`*^9, 3.732011217994439*^9}, {
  3.7320112519810414`*^9, 3.732011308013183*^9}, {3.7320113516734753`*^9, 
  3.73201146737949*^9}, {3.7320115037926445`*^9, 3.7320115083768773`*^9}, {
  3.732011543367017*^9, 3.7320116512398353`*^9}, {3.7320116941299877`*^9, 
  3.732011723657195*^9}, {3.732011973869955*^9, 3.7320119776110144`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"52ddc639-810a-4197-b6cf-27ed4b2556f6"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0.5, 135.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{26.360888710968776`, 48.44122990700252}, {
          17.39925745166694, 94.24820478449749}}],
        StatusArea[#, 135]& ,
        TagBoxNote->"135"],
       StyleBox["135", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[135, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 297.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{47.94122990700252, 
          70.02157110303628}, {-74.2194793477297, 94.24820478449749}}],
        StatusArea[#, 297]& ,
        TagBoxNote->"297"],
       StyleBox["297", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[297, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2.5, 210.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.52157110303628, 
          91.60191229907002}, {-25.016824399905587`, 94.24820478449749}}],
        StatusArea[#, 210]& ,
        TagBoxNote->"210"],
       StyleBox["210", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[210, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3.5, 131.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{91.10191229907002, 113.18225349510378`}, {
          19.661448483750803`, 94.24820478449749}}],
        StatusArea[#, 131]& ,
        TagBoxNote->"131"],
       StyleBox["131", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[131, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4.5, 73.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{112.68225349510378`, 134.7625946911375}, {
          52.4632184489669, 94.24820478449749}}],
        StatusArea[#, 73]& ,
        TagBoxNote->"73"],
       StyleBox["73", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[73, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5.5, 49.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{134.2625946911375, 156.34293588717128`}, {
          66.0363646414701, 94.24820478449749}}],
        StatusArea[#, 49]& ,
        TagBoxNote->"49"],
       StyleBox["49", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[49, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6.5, 35.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{155.84293588717128`, 177.92327708320502`}, {
          73.95403325376364, 94.24820478449749}}],
        StatusArea[#, 35]& ,
        TagBoxNote->"35"],
       StyleBox["35", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[35, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6.5, 0}, {7.5, 27.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{177.42327708320502`, 199.50361827923876`}, {
          78.47841531793138, 94.24820478449749}}],
        StatusArea[#, 27]& ,
        TagBoxNote->"27"],
       StyleBox["27", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7.5, 0}, {8.5, 24.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{199.00361827923876`, 221.08395947527254`}, {
          80.17505859199429, 94.24820478449749}}],
        StatusArea[#, 24]& ,
        TagBoxNote->"24"],
       StyleBox["24", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[24, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8.5, 0}, {9.5, 10.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{220.58395947527254`, 242.66430067130628`}, {
          88.09272720428783, 94.24820478449749}}],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9.5, 0}, {10.5, 8.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{242.16430067130628`, 264.24464186734}, {
          89.22382272032975, 94.24820478449749}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10.5, 0}, {11.5, 5.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{263.74464186734, 285.8249830633738}, {
          90.92046599439266, 94.24820478449749}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{11.5, 0}, {12.5, 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{285.3249830633738, 307.4053242594075}, {
          91.48601375241363, 94.24820478449749}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Nodules\"", TraditionalForm], 
    FormBox["\"Count\"", TraditionalForm]},
  AxesOrigin->{-0.76, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"Number of Large (\[GreaterEqual]3mm) Nodules per Patient\"", 
    TraditionalForm],
  PlotRange->{{-0.5, 12.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7320119892172127`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"0e1709c2-2e52-41d3-89e7-5188bf6844b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<nodules_large.pdf\>\""}], "}"}]}], ",", "nodulesLarge"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7320120416433935`*^9, 3.7320120454387627`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"37776be1-eee7-46bd-a0b1-d22455955e6e"],

Cell[BoxData["\<\"C:\\\\Users\\\\lhe\\\\cs109b\\\\cs109b-projectofchampions\\\
\\data\\\\prelim_EDA\\\\nodules_large.pdf\"\>"], "Output",
 CellChangeTimes->{3.732012047447303*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"b3db6a13-c5b0-4afd-8397-b76744faeb2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Counts", "[", 
   RowBox[{"noduleCounts", "[", 
    RowBox[{"All", ",", "\"\<Number of Nodules <3mm***\>\""}], "]"}], "]"}], "//",
   "KeySort"}]], "Input",
 CellChangeTimes->{{3.7320118861455803`*^9, 3.73201188782661*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"f5eb87e1-cce7-4bff-b4e8-dad5bb86043e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 40, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 40], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[60], 
            TypeSystem`PackageScope`AtomShape[34]]], 20, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[491835399], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 40], "HandleQ" -> True, "RowTarget" -> 20,
         "Data" -> TypeSystem`PackageScope`CacheHandle[491835399]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["0."], 
                    Style[
                    RawBoxes["0."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[0.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[0.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["155"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[0.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1."], 
                    Style[
                    RawBoxes["1."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[1.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[1.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["177"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[1.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2."], 
                    Style[
                    RawBoxes["2."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[2.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[2.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["148"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[2.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["3."], 
                    Style[
                    RawBoxes["3."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[3.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[3.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["124"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[3.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["4."], 
                    Style[
                    RawBoxes["4."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[4.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[4.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["98"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[4.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["5."], 
                    Style[
                    RawBoxes["5."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[5.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[5.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["68"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[5.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["6."], 
                    Style[
                    RawBoxes["6."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[6.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[6.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["44"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[6.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["7."], 
                    Style[
                    RawBoxes["7."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[7.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[7.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["42"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[7.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["8."], 
                    Style[
                    RawBoxes["8."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[8.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[8.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["27"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[8.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["9."], 
                    Style[
                    RawBoxes["9."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[9.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[9.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[9.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["10."], 
                    Style[
                    RawBoxes["10."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[10.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[10.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[10.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["11."], 
                    Style[
                    RawBoxes["11."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[11.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[11.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[11.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["12."], 
                    Style[
                    RawBoxes["12."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[12.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[12.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[12.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["13."], 
                    Style[
                    RawBoxes["13."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[13.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[13.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[13.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["14."], 
                    Style[
                    RawBoxes["14."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[14.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[14.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[14.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["15."], 
                    Style[
                    RawBoxes["15."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[15.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[15.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[15.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["16."], 
                    Style[
                    RawBoxes["16."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[16.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[16.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[16.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["17."], 
                    Style[
                    RawBoxes["17."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[17.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[17.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[17.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["18."], 
                    Style[
                    RawBoxes["18."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[18.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[18.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[18.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["19."], 
                    Style[
                    RawBoxes["19."], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][{
                    Key[19.]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                   GeneralUtilities`Slice[
                    Key[19.]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
                  GeneralUtilities`Slice[
                   Key[19.]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 653230844]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[653230844][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {238., {268., 274.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.732011888960993*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"6e295636-42f2-46ea-b481-748aba4c9fe7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nodulesSmall", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"noduleCounts", "[", 
       RowBox[{"All", ",", "\"\<Number of Nodules <3mm***\>\""}], "]"}], ",", 
      RowBox[{"LessEqualThan", "[", "16", "]"}]}], "]"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Nodules\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of Large (\[GreaterEqual]3mm) Nodules per Patient\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.732011904654343*^9, 3.732011968829906*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"70865a79-0b33-44e0-9914-c021ef0cfd08"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0.5, 155.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{26.360888710968787`, 
          43.3635025667593}, {-53.34214007705741, 94.2482047844975}}],
        StatusArea[#, 155]& ,
        TagBoxNote->"155"],
       StyleBox["155", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[155, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 177.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{42.8635025667593, 
          59.86611642254982}, {-74.21947934772972, 94.2482047844975}}],
        StatusArea[#, 177]& ,
        TagBoxNote->"177"],
       StyleBox["177", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[177, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2.5, 148.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{59.36611642254982, 
          76.36873027834034}, {-46.69935030911621, 94.2482047844975}}],
        StatusArea[#, 148]& ,
        TagBoxNote->"148"],
       StyleBox["148", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[148, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3.5, 124.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{75.86873027834034, 
          92.87134413413085}, {-23.92407110474643, 94.2482047844975}}],
        StatusArea[#, 124]& ,
        TagBoxNote->"124"],
       StyleBox["124", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[124, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4.5, 98.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{92.37134413413085, 109.37395798992137`}, {
          0.74914803332085, 94.2482047844975}}],
        StatusArea[#, 98]& ,
        TagBoxNote->"98"],
       StyleBox["98", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[98, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5.5, 68.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{108.87395798992137`, 125.87657184571188`}, {
          29.21824703878309, 94.2482047844975}}],
        StatusArea[#, 68]& ,
        TagBoxNote->"68"],
       StyleBox["68", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[68, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6.5, 44.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{125.37657184571188`, 142.37918570150242`}, {
          51.993526243152886`, 94.2482047844975}}],
        StatusArea[#, 44]& ,
        TagBoxNote->"44"],
       StyleBox["44", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[44, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6.5, 0}, {7.5, 42.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{141.87918570150242`, 158.88179955729294`}, {
          53.891466176850365`, 94.2482047844975}}],
        StatusArea[#, 42]& ,
        TagBoxNote->"42"],
       StyleBox["42", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[42, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7.5, 0}, {8.5, 27.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{158.38179955729294`, 175.38441341308345`}, {
          68.12601567958149, 94.2482047844975}}],
        StatusArea[#, 27]& ,
        TagBoxNote->"27"],
       StyleBox["27", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8.5, 0}, {9.5, 18.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{174.88441341308345`, 191.88702726887396`}, {
          76.66674538122015, 94.2482047844975}}],
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9.5, 0}, {10.5, 16.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{191.38702726887396`, 208.38964112466448`}, {
          78.56468531491764, 94.2482047844975}}],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10.5, 0}, {11.5, 14.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{207.88964112466448`, 224.892254980455}, {
          80.46262524861513, 94.2482047844975}}],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{11.5, 0}, {12.5, 6.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{224.392254980455, 241.39486883624554`}, {
          88.05438498340506, 94.2482047844975}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{12.5, 0}, {13.5, 15.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{240.89486883624554`, 257.897482692036}, {
          79.51365528176638, 94.2482047844975}}],
        StatusArea[#, 15]& ,
        TagBoxNote->"15"],
       StyleBox["15", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[15, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{13.5, 0}, {14.5, 10.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{257.397482692036, 274.40009654782654`}, {
          84.25850511601008, 94.2482047844975}}],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{14.5, 0}, {15.5, 5.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{273.90009654782654`, 290.90271040361705`}, {
          89.0033549502538, 94.2482047844975}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{15.5, 0}, {16.5, 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{290.40271040361705`, 307.40532425940756`}, {
          89.95232491710254, 94.2482047844975}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Nodules\"", TraditionalForm], 
    FormBox["\"Count\"", TraditionalForm]},
  AxesOrigin->{-0.8400000000000001, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"Number of Large (\[GreaterEqual]3mm) Nodules per Patient\"", 
    TraditionalForm],
  PlotRange->{{-0.5, 16.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7320119354577236`*^9, 3.7320119696866956`*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"250d1737-b1c5-41f0-8e8f-dd3045252b1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<nodules_small.pdf\>\""}], "}"}]}], ",", "nodulesSmall"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.732012056424735*^9, 3.7320120604254436`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"40ed418f-ce1b-4cbb-ba51-e9e795270bd4"],

Cell[BoxData["\<\"C:\\\\Users\\\\lhe\\\\cs109b\\\\cs109b-projectofchampions\\\
\\data\\\\prelim_EDA\\\\nodules_small.pdf\"\>"], "Output",
 CellChangeTimes->{3.7320120614561405`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"3b0def40-793d-4e4c-8dc7-58efb1f88988"]
}, Open  ]]
},
WindowSize->{759, 697},
WindowMargins->{{Automatic, 135}, {Automatic, 31}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 444, 11, 28, "Input",ExpressionUUID->"010c784a-a775-4539-b973-d0c600cfa6bc"],
Cell[CellGroupData[{
Cell[1027, 35, 313, 7, 28, "Input",ExpressionUUID->"502e9ace-b246-4b1d-86bc-26dfd24a2f42"],
Cell[1343, 44, 104300, 2192, 583, "Output",ExpressionUUID->"20101a81-9a9f-45aa-9c7f-e91c8ed42916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105680, 2241, 920, 19, 55, "Input",ExpressionUUID->"5cc41dae-1736-4c99-b115-f16ed750f30f"],
Cell[106603, 2262, 20183, 348, 235, "Output",ExpressionUUID->"3ed44510-edb3-4a1c-8571-d694a1374a1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126823, 2615, 389, 9, 28, "Input",ExpressionUUID->"17c3c532-39d9-4837-9e83-e16b48ed9980"],
Cell[127215, 2626, 238, 3, 32, "Output",ExpressionUUID->"f8fdaa48-18ca-4612-aa64-e266966bd9c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127490, 2634, 689, 15, 48, "Input",ExpressionUUID->"24f30db4-ae20-4e5e-b03a-88aa738301a5"],
Cell[128182, 2651, 19742, 340, 238, "Output",ExpressionUUID->"7cbc640d-4896-4632-ad1e-30b89007914e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147961, 2996, 393, 9, 28, "Input",ExpressionUUID->"c7c2885f-28ab-4b48-9c42-8fa2a599661c"],
Cell[148357, 3007, 242, 3, 32, "Output",ExpressionUUID->"a9ef3df7-00c0-48a9-8439-678d0b461b3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148636, 3015, 966, 22, 86, "Input",ExpressionUUID->"7f15725a-ca56-4a41-b9e8-2ce7db425873"],
Cell[149605, 3039, 87862, 1498, 414, "Output",ExpressionUUID->"046a0c12-da19-44b2-b57f-9c5c638dd17c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237504, 4542, 379, 9, 28, "Input",ExpressionUUID->"52523670-4669-479e-82c1-528c171263a3"],
Cell[237886, 4553, 237, 3, 32, "Output",ExpressionUUID->"04b7c982-e5b9-490f-b51f-27e894252045"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238160, 4561, 665, 15, 48, "Input",ExpressionUUID->"0970f8b8-506b-430c-a85a-3412a5b505ae"],
Cell[238828, 4578, 20193, 348, 235, "Output",ExpressionUUID->"2fcaa63e-91f1-4c59-b058-36668d488cfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259058, 4931, 387, 9, 28, "Input",ExpressionUUID->"dcf0b623-0818-4913-94ee-fcd4c3efc91f"],
Cell[259448, 4942, 239, 3, 32, "Output",ExpressionUUID->"5c0b9de8-0adf-4cf0-9768-bd310bfa8fe0"]
}, Open  ]],
Cell[259702, 4948, 459, 11, 67, "Input",ExpressionUUID->"e32ab716-d96f-45a0-a835-b418b92951c0"],
Cell[CellGroupData[{
Cell[260186, 4963, 327, 7, 28, "Input",ExpressionUUID->"b60e2077-a36b-4aeb-9f6d-845c2f637128"],
Cell[260516, 4972, 70779, 1409, 583, "Output",ExpressionUUID->"159f0c42-5b82-457f-b74c-ecefaac87557"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331332, 6386, 386, 8, 28, "Input",ExpressionUUID->"e4957a78-ae0f-49dd-9176-d354b2169fa2"],
Cell[331721, 6396, 62971, 1242, 561, "Output",ExpressionUUID->"8909965c-dd35-4f3a-92f2-a2afbc3bdf27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394729, 7643, 879, 19, 67, "Input",ExpressionUUID->"a6183f49-e3c9-4081-8476-6b6e4e112aac"],
Cell[395611, 7664, 20542, 588, 273, "Output",ExpressionUUID->"39dad244-447f-4ebf-be9f-77285b079256"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416190, 8257, 388, 9, 28, "Input",ExpressionUUID->"94bf0ba0-d2ef-417e-9ac4-9bbd8c91fcbe"],
Cell[416581, 8268, 254, 3, 32, "Output",ExpressionUUID->"ffc5506a-9ac8-4f6f-80d4-78c1900d1796"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416872, 8276, 338, 7, 28, "Input",ExpressionUUID->"7a587354-5172-49ba-b109-b9976c130fac"],
Cell[417213, 8285, 38436, 758, 535, "Output",ExpressionUUID->"13a084d6-f57a-427c-8437-ca52dac3be94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455686, 9048, 1059, 22, 86, "Input",ExpressionUUID->"52ddc639-810a-4197-b6cf-27ed4b2556f6"],
Cell[456748, 9072, 9206, 264, 245, "Output",ExpressionUUID->"0e1709c2-2e52-41d3-89e7-5188bf6844b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465991, 9341, 405, 10, 28, "Input",ExpressionUUID->"37776be1-eee7-46bd-a0b1-d22455955e6e"],
Cell[466399, 9353, 258, 3, 32, "Output",ExpressionUUID->"b3db6a13-c5b0-4afd-8397-b76744faeb2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466694, 9361, 337, 7, 28, "Input",ExpressionUUID->"f5eb87e1-cce7-4bff-b4e8-dad5bb86043e"],
Cell[467034, 9370, 62942, 1242, 561, "Output",ExpressionUUID->"6e295636-42f2-46ea-b481-748aba4c9fe7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530013, 10617, 756, 18, 86, "Input",ExpressionUUID->"70865a79-0b33-44e0-9914-c021ef0cfd08"],
Cell[530772, 10637, 11732, 336, 245, "Output",ExpressionUUID->"250d1737-b1c5-41f0-8e8f-dd3045252b1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[542541, 10978, 403, 10, 28, "Input",ExpressionUUID->"40ed418f-ce1b-4cbb-ba51-e9e795270bd4"],
Cell[542947, 10990, 260, 3, 89, "Output",ExpressionUUID->"3b0def40-793d-4e4c-8dc7-58efb1f88988"]
}, Open  ]]
}
]
*)

